define({ "api": [
  {
    "type": "post",
    "url": "/v3/achievement",
    "title": "Create Achievement",
    "name": "CreateAchievement",
    "group": "Achievement",
    "description": "<p>The achievement can be an increase of player points, a player levelup, receive a badge and any other reward that the player receive in the gamification. When the player receive something the total of achievement is positive, when the player lose something the total is negative.</p>",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/achievement"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/achievement HTTP/1.1\nHost: service2.funifier.com\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n\"player\":\"player@funifier.com\", \n\"total\":100, \n\"type\":0, \n\"item\":\"544279769fbc0ab38ddd765d\"\n}",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Achievement",
            "optional": false,
            "field": "achievement",
            "description": "<p>Json Object with the following attributes: player, total, type, item; player (string) Player’s unique identifier that is receiving this achievement; total (int) how many of this achievement the player received, eg. Eg. 10 points, 5 badges, 1 level; type (string) can be POINT = 0, CHALLENGE = 1, CATALOG_ITEM = 2, LEVEL = 3, CROWN = 4, LOTTERY = 5; MYSTERY_BOX = 6; CHARACTER_STAR_STAT = 7; BONUS = 8; item (string) the id of the element eg. XP point id;</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AchievementRest.java",
    "groupTitle": "Achievement"
  },
  {
    "group": "Achievement",
    "name": "DeleteAchievement",
    "type": "delete",
    "url": "/v3/achievement/:id",
    "title": "Delete Achievement",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/achievement/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Achievement Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AchievementRest.java",
    "groupTitle": "Achievement"
  },
  {
    "group": "Achievement",
    "name": "FindAchievementTypeOptions",
    "type": "get",
    "url": "/v3/achievement/options/:id",
    "title": "Find Type Options",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/achievement/options/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "option",
            "description": "<p>type</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ],
            "optional": false,
            "field": "type",
            "description": "<p>Type’s identifier. This field contains one of the following values: POINT = 0; CHALLENGE = 1; CATALOG_ITEM = 2; LEVEL = 3; CROWN = 4; LOTTERY = 5; MYSTERY_BOX = 6; CHARACTER_STAR_STAT = 7; BONUS = 8;</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n[\n  {\n    \"_id\": \"5704e892e61a6c591f640d0b\",\n    \"label\": \"Coins\"\n  }\n]",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AchievementRest.java",
    "groupTitle": "Achievement"
  },
  {
    "type": "get",
    "url": "/v3/achievement",
    "title": "Query Achievement",
    "name": "QueryAchievement",
    "group": "Achievement",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/achievement"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          },
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Range",
            "description": "<p>items=0-100</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/achievement?published_min=2016-03-20T13:53:00-03:00&orderby=time&reverse=true&player=player@funifier.com&type=1\nAuthorization: Basic NTc3NTI4MzRkYjFjMzQyOTFkYTM0YTQ",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player’s unique identifier that is receiving this achievement.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ],
            "optional": false,
            "field": "type",
            "description": "<p>Type’s identifier. This field contains one of the following values: POINT = 0; CHALLENGE = 1; CATALOG_ITEM = 2; LEVEL = 3; CROWN = 4; LOTTERY = 5; MYSTERY_BOX = 6; CHARACTER_STAR_STAT = 7; BONUS = 8;</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "item",
            "description": "<p>Identifier of the chosen type, if you chose the point type, then the item will be the id of a category point for example xp. eg. xp point id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"player\"",
              "\"total\"",
              "\"type\"",
              "\"item\"",
              "\"time\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: player, total, type, item, time.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\n[\n  {\n    \"player\": \"ricardo.lopes.costa@gmail.com\",\n    \"total\": 1,\n    \"type\": 1,\n    \"item\": \"57752a90db1c34291da34e26\",\n   \"time\": 1467296954539,\n   \"_id\": \"57752cbae4b0d09a204be8af\"\n },\n {\n   \"player\": \"ricardo.lopes.costa@gmail.com\",\n    \"total\": 10,\n    \"type\": 0,\n   \"item\": \"577528a7db1c34291da34b49\",\n   \"time\": 1467296954539,\n   \"_id\": \"57752cbae4b0d09a204be8b0\"\n }\n]",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AchievementRest.java",
    "groupTitle": "Achievement"
  },
  {
    "group": "Achievement",
    "name": "QueryAchievement_Aggregate",
    "type": "post",
    "url": "/v3/achievement/aggregate",
    "title": "Query Achievement Aggregate",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/achievement/aggregate"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          },
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Range",
            "description": "<p>items=0-100</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/achievement/aggregate?published_min=2016-03-20T00:00:00-03:00&player=ricardo.lopes.costa@gmail.com",
        "type": "json"
      },
      {
        "title": "Total by Player",
        "content": "POST /v3/achievement/aggregate?type=1&published_min=-10d&player=ricardo.lopes.costa@gmail.com\nAuthorization: Basic NTk0OTY4MjU5OGVhYTIyODA4YWQ5MmUyOjU5NDk2YmQ4OThlYWE==\nContent-Type: application/json\n[\n\t\"{ $group: {_id: {player:\\\"$player\\\"}, total: {$sum: \\\"$total\\\"} }}\"\n]",
        "type": "json"
      },
      {
        "title": "Total by Player and Type",
        "content": "POST /v3/achievement/aggregate?published_min=-10d\nAuthorization: Basic NTk0OTY4MjU5OGVhYTIyODA4YWQ5MmUyOjU5NDk2YmQ4OThlYWE==\nContent-Type: application/json\n[\n\t\"{ $group: {_id: {player:\\\"$player\\\", type:\\\"$type\\\"}, total: {$sum: \\\"$total\\\"} }}\"\n]",
        "type": "json"
      },
      {
        "title": "Total by Type",
        "content": "POST /v3/achievement/aggregate?published_min=-10d\nAuthorization: Basic NTk0OTY4MjU5OGVhYTIyODA4YWQ5MmUyOjU5NDk2YmQ4OThlYWE==\nContent-Type: application/json\n[\n\t\"{ $group: {_id: {type:\\\"$type\\\"}, total: {$sum: \\\"$total\\\"} }}\"\n]",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player’s unique identifier. Eg. jogador@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "team",
            "description": "<p>Team’s unique identifier. Eg. team1</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ],
            "optional": false,
            "field": "type",
            "description": "<p>Type’s identifier. This field contains one of the following values: POINT = 0; CHALLENGE = 1; CATALOG_ITEM = 2; LEVEL = 3; CROWN = 4; LOTTERY = 5; MYSTERY_BOX = 6; CHARACTER_STAR_STAT = 7; BONUS = 8;</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "item",
            "description": "<p>Identifier of the chosen type, if you chose the point type, then the item will be the id of a category point for example xp. eg. xp point id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "List",
            "optional": false,
            "field": "aggregations",
            "description": "<p>List of aggregations in mongodb aggregation framework syntax. if you dont specify it will use the default that count the actionlogs grouped by players: [&quot;{$group: {_id: &quot;$userId&quot;, total: {$sum: 1}, start: {$min: &quot;$time&quot;}, end: {$max: &quot;$time&quot;}}}&quot;]</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AchievementRest.java",
    "groupTitle": "Achievement"
  },
  {
    "group": "Achievement",
    "name": "QueryAchievement_Frequency",
    "type": "get",
    "url": "/v3/achievement/frequency",
    "title": "Query Achievement Frequency",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/achievement/frequency"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/achievement/frenquency?published_min=2016-03-20T00:00:00-03:00&player=ricardo.lopes.costa@gmail.com&every=1d",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player’s unique identifier. Eg. jogador@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ],
            "optional": false,
            "field": "type",
            "description": "<p>Type’s identifier. This field contains one of the following values: POINT = 0; CHALLENGE = 1; CATALOG_ITEM = 2; LEVEL = 3; CROWN = 4; LOTTERY = 5; MYSTERY_BOX = 6; CHARACTER_STAR_STAT = 7; BONUS = 8;</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "item",
            "description": "<p>Identifier of the chosen type, if you chose the point type, then the item will be the id of a category point for example xp. eg. xp point id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "every",
            "description": "<p>Represents the frequency to group, example 1d (every day) or 3M (every 3 months). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"America/Los_Angeles\"",
              "\"Europe/Copenhagen\"",
              "\"America/Sao_Paulo\""
            ],
            "optional": false,
            "field": "time_zone",
            "description": "<p>By default, use the current system TimeZone but you can specify your time zone to group all the times.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "sum_field",
            "description": "<p>Not required. Sum the specified field in the attributes of action log, eg. if you have action logs like {actionId:&quot;buy&quot;, userId:&quot;123&quot;, attributes:{price:20}} you can use &quot;price&quot; as sum_field; This field must be a Number; If you dont specify the sum_field this method will just sum the amount of action logs;</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AchievementRest.java",
    "groupTitle": "Achievement"
  },
  {
    "group": "Action",
    "name": "CreateAction",
    "type": "post",
    "url": "/v3/action",
    "title": "Create Action",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/action"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Action",
            "optional": false,
            "field": "action",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/action\nBODY\n{\n  \"action\" : \"sell\",\n  \"attributes\" : [ \n     {\"name\" : \"product\", \"type\" : \"String\"}, \n     {\"name\" : \"price\", \"type\" : \"Number\"}],\n  \"image\" : {\n    \"small\" : { \"url\" : \"http://funifier.com/action.png\" },\n    \"medium\" : { \"url\" : \"http://funifier.com/action.png\" },\n    \"original\" : { \"url\" : \"http://funifier.com/action.png\" }\n  },\n  \"limit\" : {\n      \"total\" : 1,\n      \"per\" : \"player\",\n      \"every\" : \"1h\"\n    }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ActionRest.java",
    "groupTitle": "Action"
  },
  {
    "group": "Action",
    "name": "CreateActionLog",
    "type": "post",
    "url": "/v3/action/log",
    "title": "Create Action Log",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/action/log"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example Attributes",
        "content": "POST /v3/action/log\nBODY\n{\n  \"actionId\" : \"buy\",\n  \"userId\" : \"player@funifier.com\",\n  \"attributes\" : {\"product\" : \"book\", \"price\" : 86.5}\n}",
        "type": "json"
      },
      {
        "title": "Example Geolocation <longitude>,<latitude>",
        "content": "POST /v3/action/log\nBODY\n{\n  \"actionId\" : \"checkin\",\n  \"userId\" : \"player@funifier.com\",\n  \"attributes\" : {\n \t\"company\" : \"coca-cola\", \n \t\"location\" : {\n\t \t    \"type\" : \"Point\",\n\t \t    \"coordinates\" : [-15.797922, -47.887791]\n \t}\n  }\n}",
        "type": "json"
      },
      {
        "title": "Example Simple",
        "content": "POST /v3/action/log\nBODY\n{\n  \"actionId\" : \"tweet\",\n  \"userId\" : \"player@funifier.com\"\n}",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "ActionLog",
            "optional": false,
            "field": "actionLog",
            "description": "<p>Json Object with the following attributes: actionId, userId, attributes. ActionId (string) Action unique identifier that is being executed; UserId (string) Player’s unique identifier that is executing the action; Attriburtes (object) Json object with atributes names and values. Eg: {&quot;product&quot; : &quot;license&quot;, &quot;price&quot; : 86.5};</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "async",
            "description": "<p>Allows you to execute this operation synchronous or asynchronous. Default value is true (asynchronous), if you set to false (synchronous) the result will bring all achievements resulted by this execution.</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ActionRest.java",
    "groupTitle": "Action"
  },
  {
    "group": "Action",
    "name": "DeleteAction",
    "type": "delete",
    "url": "/v3/action/:id",
    "title": "Delete Action",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/action/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Action Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ActionRest.java",
    "groupTitle": "Action"
  },
  {
    "group": "Action",
    "name": "DeleteActionLog",
    "type": "delete",
    "url": "/v3/action/log/:id",
    "title": "Delete Action Log",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/action/log/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Action Log Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ActionRest.java",
    "groupTitle": "Action"
  },
  {
    "group": "Action",
    "name": "FindAction",
    "type": "get",
    "url": "/v3/action/:id",
    "title": "Find Action",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/action/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Action Id</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ActionRest.java",
    "groupTitle": "Action"
  },
  {
    "group": "Action",
    "name": "QueryAction",
    "type": "get",
    "url": "/v3/action",
    "title": "Query Action",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/action"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/action?orderby=time&reverse=true",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Action ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "action",
            "description": "<p>Action’s name.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"action\"",
              "\"attributes\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;action&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ActionRest.java",
    "groupTitle": "Action"
  },
  {
    "group": "Action",
    "name": "QueryActionLog",
    "type": "get",
    "url": "/v3/action/log",
    "title": "Query Action Log",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/action/log"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          },
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Range",
            "description": "<p>items=0-100</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/action/log?published_min=2016-03-20T00:00:00-03:00&orderby=time&reverse=true&max_results=10&player=ricardo.lopes.costa@gmail.com",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player’s unique identifier. Eg. jogador@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "action",
            "description": "<p>Action unique identifier. Eg: 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"actionId\"",
              "\"userId\"",
              "\"time\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: actionId, userId, time.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ActionRest.java",
    "groupTitle": "Action"
  },
  {
    "group": "Action",
    "name": "QueryActionLog_Aggregate",
    "type": "post",
    "url": "/v3/action/log/aggregate",
    "title": "Query Action Log Aggregate",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/action/log/aggregate"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          },
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Range",
            "description": "<p>items=0-100</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/action/log/aggregate?published_min=2016-03-20T00:00:00-03:00&player=ricardo.lopes.costa@gmail.com",
        "type": "json"
      },
      {
        "title": "Total by Player",
        "content": "POST /v3/action/log/aggregate?action=buy&published_min=-10d&player=ricardo.lopes.costa@gmail.com\nAuthorization: Basic NTk0OTY4MjU5OGVhYTIyODA4YWQ5MmUyOjU5NDk2YmQ4OThlYWE==\nContent-Type: application/json\n[\n\t\"{ $group: {_id: {player:\\\"$userId\\\"}, total: {$sum: 1} }}\"\n]",
        "type": "json"
      },
      {
        "title": "Total by Player and Action",
        "content": "POST /v3/action/log/aggregate?published_min=-10d\nAuthorization: Basic NTk0OTY4MjU5OGVhYTIyODA4YWQ5MmUyOjU5NDk2YmQ4OThlYWE==\nContent-Type: application/json\n[\n\t\"{ $group: {_id: {player:\\\"$userId\\\", action:\\\"$actionId\\\"}, total: {$sum: 1} }}\"\n]",
        "type": "json"
      },
      {
        "title": "Total by Action",
        "content": "POST /v3/action/log/aggregate?published_min=-10d\nAuthorization: Basic NTk0OTY4MjU5OGVhYTIyODA4YWQ5MmUyOjU5NDk2YmQ4OThlYWE==\nContent-Type: application/json\n[\n\t\"{ $group: {_id: {action:\\\"$actionId\\\"}, total: {$sum: 1} }}\"\n]",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player’s unique identifier. Eg. jogador@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "action",
            "description": "<p>Action unique identifier. Eg: 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "List",
            "optional": false,
            "field": "aggregations",
            "description": "<p>List of aggregations in mongodb aggregation framework syntax. if you dont specify it will use the default that count the actionlogs grouped by players: [&quot;{$group: {_id: &quot;$userId&quot;, total: {$sum: 1}, start: {$min: &quot;$time&quot;}, end: {$max: &quot;$time&quot;}}}&quot;]</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ActionRest.java",
    "groupTitle": "Action"
  },
  {
    "group": "Action",
    "name": "QueryActionLog_Frequency",
    "type": "get",
    "url": "/v3/action/log/frequency",
    "title": "Query Action Log Frequency",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/action/log/frequency"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/action/log/frenquency?published_min=2016-03-20T00:00:00-03:00&player=ricardo.lopes.costa@gmail.com&every=1d",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player’s unique identifier. Eg. jogador@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "action",
            "description": "<p>Action unique identifier. Eg: 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "every",
            "description": "<p>Represents the frequency to group, example 1d (every day) or 3M (every 3 months). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"America/Los_Angeles\"",
              "\"Europe/Copenhagen\"",
              "\"America/Sao_Paulo\""
            ],
            "optional": false,
            "field": "time_zone",
            "description": "<p>By default, use the current system TimeZone but you can specify your time zone to group all the times.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "sum_field",
            "description": "<p>Not required. Sum the specified field in the attributes of action log, eg. if you have action logs like {actionId:&quot;buy&quot;, userId:&quot;123&quot;, attributes:{price:20}} you can use &quot;price&quot; as sum_field; This field must be a Number; If you dont specify the sum_field this method will just sum the amount of action logs;</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ActionRest.java",
    "groupTitle": "Action"
  },
  {
    "group": "Authentication",
    "name": "Basic",
    "type": "get",
    "url": "/v3/auth/basic",
    "title": "Basic",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/auth/basic"
      }
    ],
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/...\nAuthorization: Basic ciOiJIUzUxMiIsImNhbGciOiJHWklQIn0H4sIAAAAAAAAAFXKMQqwAwL9k7pK",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "apiKey",
            "description": "<p>Your gamification ApiKey</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "appSecret",
            "description": "<p>Your AppSecret can be created in Funifier Studio &gt; Security &gt; Apps</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\n{\n  \"Authorization\":\"eyJhbGciOiJIUzUxMiIsImNhbGciOiJHWklQIn0.H4sIAAAAAAAAAFXKMQwL9k7pK\"\n}",
          "type": "json"
        }
      ]
    },
    "description": "<p>Funifier support Basic authentication (RFC2617) with your gamification credentials. To use basic authentication encode your ApiKey and AppSecret and send it in the header of your request. You can find your ApiKey in your gamification details within your Funifier Studio. You can create your AppSecret in Security menu within your Funifier Studio. See basic authentication specification in https://tools.ietf.org/html/rfc2617 An example of steps to create your basic token in java is:</p> <p>String credentials = Base64Coder.encodeString(APIKEY + &quot;:&quot; + APP_SECRET); String credentials = Base64Coder.encodeString(&quot;5704e7fbe61a6c591fxywzc0b:57050a8fe61a6c591fxywzdaa&quot;); String credentials = Basic NTcwNGU3ZmJlNjFhNmM1OTFmNjQwYzXXX==</p>",
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AuthenticationRest.java",
    "groupTitle": "Authentication"
  },
  {
    "group": "Authentication",
    "name": "Password",
    "type": "post",
    "url": "/v3/auth/token",
    "title": "Password",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/auth/token"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Content-Type",
            "defaultValue": "application/x-www-form-urlencoded",
            "description": ""
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Content-Type\": \"application/x-www-form-urlencoded\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "apiKey",
            "description": "<p>Your gamification ApiKey</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>Your player ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>Your player password, it can be empty if it is allowed in your gamification</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "grant_type",
            "defaultValue": "password",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nCache-Control: no-store\nPragma: no-cache\n{\n  \"access_token\":\"eyJhbGciOiJIUzUxMiIsImNhbGciOiJHWklQIn0.H4sIAAAAAAAAAFXKMQqAMAwAwL9k7pK\",\n  \"token_type\":\"Bearer\",\n  \"expires_in\":36000\n}",
          "type": "json"
        }
      ]
    },
    "description": "<p>This method implements authentication with password credentials support (RFC6749). Password authentication should be used to authenticate players in client side implementations. See password credentials specification in http://tools.ietf.org/html/rfc6749#page-40</p>",
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AuthenticationRest.java",
    "groupTitle": "Authentication"
  },
  {
    "group": "Authentication",
    "name": "Token",
    "type": "post",
    "url": "/v3/auth/token",
    "title": "Client Credentials",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/auth/token"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Content-Type",
            "defaultValue": "application/x-www-form-urlencoded",
            "description": ""
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Content-Type\": \"application/x-www-form-urlencoded\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "client_id",
            "description": "<p>Your gamification ApiKey</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "client_secret",
            "description": "<p>AppSecret you can create in Funifier Studio &gt; Security &gt; Apps</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "grant_type",
            "defaultValue": "client_credentials",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nCache-Control: no-store\nPragma: no-cache\n{\n  \"access_token\":\"eyJhbGciOiJIUzUxMiIsImNhbGciOiJHWklQIn0.H4sIAAAAAAAAAFXKMQqAMAwAwL9k7pK\",\n  \"token_type\":\"Bearer\",\n  \"expires_in\":36000\n}",
          "type": "json"
        }
      ]
    },
    "description": "<p>This method implements OAuth2.0 authentication with client credentials support (RFC6749). Client credentials is perfect for server side implementations, you can also use basic authentication. It supports both clientId and clientSecret passed as parameter or header Authorization basic authentication. See oauth client credentials specification in http://tools.ietf.org/html/rfc6749#page-40</p>",
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AuthenticationRest.java",
    "groupTitle": "Authentication"
  },
  {
    "group": "Bonus",
    "name": "Calculate_All_Bonus",
    "type": "put",
    "url": "/v3/bonus/calculateAll",
    "title": "Calculate All Bonus",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/bonus/calculateAll"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "List",
            "optional": false,
            "field": "id",
            "description": "<p>List of bonus ids to calculate</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/bonus/calculateAll?player=35935978881\nHost: service2.funifier.com\nAuthorization: Basic d2l6X2FzdmVuOjU4ZDJ==\nContent-Type: application/json\n\n[\n\t\"58e3e31d8517664311a3174a\",\n\t\"58e6ac2a8517666c23b5c4fd\",\n\t\"58e6b77a8517666c23b5cad0\",\n\t\"58e6b8428517666c23b5cad1\"\n]",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BonusRest.java",
    "groupTitle": "Bonus"
  },
  {
    "group": "Bonus",
    "name": "Calculate_Bonus",
    "type": "get",
    "url": "/v3/bonus/:id/calculate",
    "title": "Calculate Bonus",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/bonus/:id/calculate"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "simulate",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BonusRest.java",
    "groupTitle": "Bonus"
  },
  {
    "group": "Bonus",
    "name": "Create_Bonus",
    "type": "post",
    "url": "/v3/bonus",
    "title": "Create Bonus",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/bonus"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>This engagement technique is very used in sales to reward the sales agents that achieve their goals. It can be as a compensation plan, or a comission strategy. In this technique you can define a goal that can be a specific can be value like 10.5 or a reference for a variable that you can get from objects like players, eg. {{player.extra.monthly_sales_goal}} The possibility of defining goals trough any variable allows you to create personal goals, that are diferent for each player in your gamification. It also alows you to define an operation to calculate the result achieved by the player and compare it to the goal. eg. sum the value of every sales of blue cars done by the player. The period specify wich time frame to use in this operation. eg. use data from the last month for this calculation. At the end you can specify rewards that will be distributed depending on the percentage of the goal completed by player. eg. if a player complete 100% of the goal you can specify a reward to be applied between 100 and 110 percent of completion. each reward allows you to specify the type of reward, it can be points, badges, and any other type of achievement. you can specify the total amount of this reward and you can also inform a formula to calculate that. eg. 10 or 0.25 * {{player.years_in_company}}</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Bonus",
            "optional": false,
            "field": "bonus",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/bonus\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n\n{\n  \"title\": \"Bonus Seguro Vida\",\n  \"tags\": [\n    \"vendido\",\n    \"sustentabilidade\"\n  ],\n  \"goal\": \"{{player.extra.meta_mes_auto}}\",\n  \"operation\": {\n    \"type\": 1,\n    \"achievement_type\": -1,\n    \"item\": \"vender\",\n    \"filters\": [\n      {\n        \"param\": \"produto\",\n        \"operator\": 1,\n        \"value\": \"seg_vida\"\n      }\n    ],\n    \"sort\": 0,\n    \"sub\": false\n  },\n  \"period\": {\n    \"type\": 0,\n    \"timeAmount\": 1,\n    \"timeScale\": 7\n  },\n  \"rewards\": [\n    {\n      \"title\": \"Faixa 100%\",\n      \"start\": 100,\n      \"ends\": 110,\n      \"type\": 0,\n      \"item\": \"reais\",\n      \"total\": \"0.025 * 0.95 * {{global.teto_rv}}\"\n    },\n    {\n      \"title\": \"Faixa 110%\",\n      \"start\": 110,\n      \"ends\": 1000,\n      \"type\": 0,\n      \"item\": \"reais\",\n      \"total\": \"0.025 * 1 * {{global.teto_rv}}\"\n    }\n  ]\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BonusRest.java",
    "groupTitle": "Bonus"
  },
  {
    "group": "Bonus",
    "name": "Delete_Bonus",
    "type": "delete",
    "url": "/v3/bonus/:id",
    "title": "Delete Bonus",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/bonus/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BonusRest.java",
    "groupTitle": "Bonus"
  },
  {
    "group": "Bonus",
    "name": "Query_All_Bonus",
    "type": "get",
    "url": "/v3/bonus",
    "title": "Query All Bonus",
    "description": "<p>This method will return all bonus configurations, the follow fields are some of the result content you will get. &quot;level_progress&quot;: Have the % completion of current level, how much more points to level up, witch is the next level, and how much levels do we have.</p>",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/bonus"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Bonus ID, eg. player@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>Bonus Title, eg. Sales Bonus</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "tags",
            "description": "<p>Tags separated by &quot;,&quot; Eg. tag1,tag2</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "to",
            "description": "<p>Player or Team ID, eg. player@funifier.com, you can also use the key word &quot;me&quot; to search the current player data, return only elements where the player is in the principals field, or if any team that the player belongs to is listed in the principals field, or if the principals field is empty.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"_id\"",
              "\"title\"",
              "\"tags\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;_id&quot;, &quot;title&quot;, &quot;tags&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BonusRest.java",
    "groupTitle": "Bonus"
  },
  {
    "group": "Bonus",
    "name": "Query_Bonus",
    "type": "get",
    "url": "/v3/bonus/:id",
    "title": "Query Bonus",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/bonus/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BonusRest.java",
    "groupTitle": "Bonus"
  },
  {
    "group": "Bonus",
    "name": "Simulate_All_Bonus",
    "type": "put",
    "url": "/v3/bonus/simulateAll",
    "title": "Simulate All Bonus",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/bonus/simulateAll"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Map",
            "optional": false,
            "field": "ids",
            "description": "<p>Map with bonus id and simulation done value, for each bonus to be simulated</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/bonus/simulateAll?player=35935978881\nHost: service2.funifier.com\nAuthorization: Basic d2l6X2FzdmVuOjU4ZDJ==\nContent-Type: application/json\n\n{\n\t\"58e3e31d8517664311a3174a\":10,\n\t\"58e6ac2a8517666c23b5c4fd\":20,\n\t\"58e6b77a8517666c23b5cad0\":30,\n\t\"58e6b8428517666c23b5cad1\":40\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BonusRest.java",
    "groupTitle": "Bonus"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "Calculate_Winners",
    "type": "get",
    "url": "/v3/brazilian/lottery/:id/winners/calculate",
    "title": "Calculate Winners",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/:id/winners/calculate"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "Create_Brazilian_Lottery",
    "type": "post",
    "url": "/v3/brazilian/lottery/",
    "title": "Create Brazilian Lottery",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>This gamification technique is specific to meet Brazilian legislation of promotions and sweepstakes that should be registered in Caixa Economica Federal Bank and follow the specific procedure of generation of lucky numbers, distribution of lucky numbers and selection winning players in the randomly selected numbers of brazilian federal lottery. Any promotion or sweepstakes that do not meet these requirements is illegal in Brazil.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "BrazilianLottery",
            "optional": false,
            "field": "lottery",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/brazilian/lottery/\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n  \"title\" : \"DIGITE CAIXA\",\n  \"pattern\" : \"SSXXXXX\",\n  \"operation\" : {\n    \"type\" : 3,\n    \"achievement_type\" : 0,\n   \"sort\" : 0,\n    \"sub\" : false\n  },\n  \"period\" : {\n    \"type\" : 0,\n    \"timeAmount\" : 1,\n    \"timeScale\" : 8\n  },\n  \"winnerRules\" : [ {\n    \"key\" : \"SORTEIO_01_SMARTPHONE\",\n    \"pattern\" : [ \n    \t[ \"0\", \"0\", \"0\", \"0\", \"X\" ], \n    \t[ \"0\", \"0\", \"0\", \"0\", \"X\" ], \n    \t[ \"0\", \"0\", \"0\", \"0\", \"X\" ], \n    \t[ \"0\", \"0\", \"0\", \"0\", \"X\" ], \n    \t[ \"0\", \"0\", \"0\", \"0\", \"X\" ]\n    ],\n    \"subsequentNumbers\" : 0,\n    \"subsequentSeries\" : 99\n  }, {\n   \"key\" : \"SORTEIO_01_VIAGEM\",\n   \"pattern\" : [ \n   \t[ \"0\", \"0\", \"S\", \"X\", \"0\" ], \n    \t[ \"0\", \"0\", \"S\", \"X\", \"0\" ], \n   \t[ \"0\", \"0\", \"0\", \"X\", \"0\" ], \n   \t[ \"0\", \"0\", \"0\", \"X\", \"0\" ], \n    \t[ \"0\", \"0\", \"0\", \"X\", \"0\" ] \n   ],\n    \"subsequentNumbers\" : 0,\n    \"subsequentSeries\" : 9\n  } ]\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "Delete_Brazilian_Lottery",
    "type": "delete",
    "url": "/v3/brazilian/lottery/:id",
    "title": "Delete Brazilian Lottery",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "Distribute_Lucky_Numbers",
    "type": "get",
    "url": "/v3/brazilian/lottery/distributeLuckyNumbers/:id",
    "title": "Distribute Lucky Numbers",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/distributeLuckyNumbers/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "FindLatestFederalResult",
    "type": "get",
    "url": "/v3/brazilian/lottery/findLatestFederalResult",
    "title": "FindLatestFederalResult",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/findLatestFederalResult"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "FindLuckyNumberAttributes",
    "type": "get",
    "url": "/v3/brazilian/lottery/findLatestFederalResult/:pattern",
    "title": "FindLuckyNumberAttributes",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/findLuckyNumberAttributes/:pattern"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "pattern",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "FindLuckyNumbersByPlayer",
    "type": "get",
    "url": "/v3/brazilian/lottery/:id/numbers/player/:player",
    "title": "FindLuckyNumbersByPlayer",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/:id/numbers/player/:player"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "Find_Winners",
    "type": "get",
    "url": "/v3/brazilian/lottery/:id/winners",
    "title": "Find Winners",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/:id/winners"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "Generate_Lucky_Numbers",
    "type": "get",
    "url": "/v3/brazilian/lottery/generateLuckyNumbers/:id",
    "title": "Generate Lucky Numbers",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/generateLuckyNumbers/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "Generate_Summary",
    "type": "get",
    "url": "/v3/brazilian/lottery/:id/summary",
    "title": "GenerateS ummary",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/:id/summary"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "Query_All_Brazilian_Lottery",
    "type": "get",
    "url": "/v3/brazilian/lottery",
    "title": "Query All Brazilian Lottery",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "Query_Brazilian_Lottery",
    "type": "get",
    "url": "/v3/brazilian/lottery/:id",
    "title": "Query Brazilian Lottery",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Brazilian_Lottery",
    "name": "Update_Brazilian_Lottery",
    "type": "put",
    "url": "/v3/brazilian/lottery/:id",
    "title": "Update Brazilian Lottery",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/brazilian/lottery/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "BrazilianLottery",
            "optional": false,
            "field": "lottery",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/BrazilianLotteryRest.java",
    "groupTitle": "Brazilian_Lottery"
  },
  {
    "group": "Challenge",
    "name": "CreateChallenge",
    "type": "post",
    "url": "/v3/challenge",
    "title": "Create Challenge",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/challenge"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Challenge",
            "optional": false,
            "field": "challenge",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ChallengeRest.java",
    "groupTitle": "Challenge"
  },
  {
    "group": "Challenge",
    "name": "DeleteChallenge",
    "type": "delete",
    "url": "/v3/challenge/:id",
    "title": "Delete Challenge",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/challenge/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Challenge Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ChallengeRest.java",
    "groupTitle": "Challenge"
  },
  {
    "group": "Challenge",
    "name": "FindChallenge",
    "type": "get",
    "url": "/v3/challenge/:id",
    "title": "Find Challenge",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/challenge/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Challenge Id</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ChallengeRest.java",
    "groupTitle": "Challenge"
  },
  {
    "group": "Challenge",
    "name": "QueryChallenge",
    "type": "get",
    "url": "/v3/challenge",
    "title": "Query Challenge",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/challenge"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET https://service2.funifier.com/v3/challenge\nAuthorization: Basic NTc4MzIxY2Q1YTczMDM4YzVmM2QyO",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\n[\n  {\n    \"challenge\": \"Join Meeting\",\n    \"description\": \"Join Meeting\",\n    \"_id\": \"57752a90db1c34291da34e26\"\n  },\n  {\n    \"challenge\": \"Join 2 Meetings\",\n    \"description\": \"Join 2 Meetings\",\n    \"_id\": \"57752cb0db1c34291da35209\"\n  }\n]",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Challenge Id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "challenge",
            "description": "<p>Challenge name</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "tags",
            "description": "<p>All tags separated by &quot;,&quot; Eg. car,road,rider</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "to",
            "description": "<p>Player or Team ID, eg. player@funifier.com, you can also use the key word &quot;me&quot; to search the current player data, return only elements where the player is in the principals field, or if any team that the player belongs to is listed in the principals field, or if the principals field is empty.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, challenge, description, tags, range, active, when, rules, badge, points, items, requirements.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"id\"",
              "\"challenge\"",
              "\"description\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;challenge&quot;, &quot;description&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/ChallengeRest.java",
    "groupTitle": "Challenge"
  },
  {
    "group": "Character_Star_Stats",
    "name": "Create_Area",
    "type": "post",
    "url": "/v3/characterstarstats/area",
    "title": "Create Area",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/characterstarstats/area"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>This gamification technique is a star shape that divides a character's accomplishments into different areas.</p>",
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/characterstarstats/area\nHost: service2.funifier.com\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n  \"title\" : \"CD1\",\n  \"_id\" : \"cd1\"\n}",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "CharacterStarArea",
            "optional": false,
            "field": "area",
            "description": "<p>Json Object with the following attributes: _id, title; _id (string) Area’s unique identifier; title (string) the friendly name of this area;</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CharacterStarStatsRest.java",
    "groupTitle": "Character_Star_Stats"
  },
  {
    "group": "Character_Star_Stats",
    "name": "Create_Level",
    "type": "post",
    "url": "/v3/characterstarstats/level",
    "title": "Create Level",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/characterstarstats/level"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/characterstarstats/level\nHost: service2.funifier.com\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n  \"area\" : \"cd1\",\n  \"level\" : \"CD1 : Level 1\",\n  \"position\" : 1,\n  \"minPoints\" : 1\n}",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "CharacterStarLevel",
            "optional": false,
            "field": "level",
            "description": "<p>Json Object with the following attributes: _id, area, level, position, minPoints, requirements; _id (string) Level’s unique identifier; area (string) Area's id parent of this level; level (string) the friendly name of this level; position (int); minPoints (int) how many points of that specific area the player needs to have to be in this level;</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CharacterStarStatsRest.java",
    "groupTitle": "Character_Star_Stats"
  },
  {
    "group": "Character_Star_Stats",
    "name": "Delete_Area",
    "type": "delete",
    "url": "/v3/characterstarstats/area/:id",
    "title": "Delete Area",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/characterstarstats/area/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CharacterStarStatsRest.java",
    "groupTitle": "Character_Star_Stats"
  },
  {
    "group": "Character_Star_Stats",
    "name": "Delete_Level",
    "type": "delete",
    "url": "/v3/characterstarstats/level/:id",
    "title": "Delete Level",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/characterstarstats/level/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CharacterStarStatsRest.java",
    "groupTitle": "Character_Star_Stats"
  },
  {
    "group": "Character_Star_Stats",
    "name": "Evaluate_Player",
    "type": "get",
    "url": "/v3/characterstarstats/player/:id",
    "title": "Evaluate Player",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/characterstarstats/player/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"stats\": [\n   {\n      \"area\": \"cd1\",\n     \"percent_completed\": 100,\n     \"next_points\": 0,\n     \"next_level\": {\n       \"area\": \"cd1\",\n       \"level\": \"1\",\n       \"position\": 1,\n       \"minPoints\": 1,\n       \"_id\": \"57e6e6b2e4b0ad64097cd8de\"\n     },\n     \"total_levels\": 5\n   },\n   {\n     \"area\": \"cd2\",\n      \"percent_completed\": 100,\n      \"next_points\": 0,\n     \"next_level\": {\n       \"area\": \"cd2\",\n       \"level\": \"1\",\n       \"position\": 1,\n       \"minPoints\": 1,\n       \"_id\": \"57e6e81ae4b0ad64097cde24\"\n     }\n  ],\n  \"player\": \"you@iflowww.com\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CharacterStarStatsRest.java",
    "groupTitle": "Character_Star_Stats"
  },
  {
    "group": "Character_Star_Stats",
    "name": "Find_Area",
    "type": "get",
    "url": "/v3/characterstarstats/area/:id",
    "title": "Find Area",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/characterstarstats/area/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Area</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CharacterStarStatsRest.java",
    "groupTitle": "Character_Star_Stats"
  },
  {
    "group": "Character_Star_Stats",
    "name": "Find_Level",
    "type": "get",
    "url": "/v3/characterstarstats/level/:id",
    "title": "Find Level",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/characterstarstats/level/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Level</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CharacterStarStatsRest.java",
    "groupTitle": "Character_Star_Stats"
  },
  {
    "group": "Character_Star_Stats",
    "name": "Query_Areas",
    "type": "get",
    "url": "/v3/characterstarstats",
    "title": "Query Areas",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/characterstarstats/area"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n[\n  {\n    \"title\" : \"CD1\",\n    \"_id\" : \"cd1\"\n  },\n  {\n    \"title\" : \"CD2\",\n    \"_id\" : \"cd2\"\n  }\n]",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CharacterStarStatsRest.java",
    "groupTitle": "Character_Star_Stats"
  },
  {
    "group": "Character_Star_Stats",
    "name": "Query_Levels",
    "type": "get",
    "url": "/v3/characterstarstats/level",
    "title": "Query Levels",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/characterstarstats/level"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n[\n\t{\n\t   \"area\" : \"cd1\",\n\t   \"level\" : \"CD1 : Level 1\",\n\t   \"position\" : 1,\n\t   \"minPoints\" : 1\n\t },\n\t {\n\t   \"area\" : \"cd1\",\n\t   \"level\" : \"CD1 : Level 2\",\n\t   \"position\" : 2,\n\t   \"minPoints\" : 10\n\t },\n\t {\n\t   \"area\" : \"cd1\",\n\t   \"level\" : \"CD1 : Level 3\",\n\t   \"position\" : 3,\n\t   \"minPoints\" : 100\n\t },\n]",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/characterstarstats/level?published_min=2016-03-20T00:00:00-03:00&orderby=time&reverse=true&max_results=10&area=cd2",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "area",
            "description": "<p>Area's unique identifier. Eg. cd1</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "level",
            "description": "<p>Level's unique identifier. Eg: 1</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"area\"",
              "\"level\"",
              "\"position\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: area, level, position.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CharacterStarStatsRest.java",
    "groupTitle": "Character_Star_Stats"
  },
  {
    "group": "Competition",
    "name": "CreateCompetition",
    "type": "post",
    "url": "/v3/competition",
    "title": "Create Competition",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/competition"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>Competition is a dispute between two or more players that happens within a set period to gauge which players achieve the best results. A competition must stipulate the maximum number of participants as well as the maximum number of winners. In addition the criterion of classification of the competitors must be defined. Players must register in the competition in order to participate and be considered in the determination of the winners. As a reward, the winners of a competition win the title of winner of the competition with their respective position in the standings, and can also win other prizes such as points. Competition involves various gaming techniques such as leaderboard, status points, quest lists, antecipade parade, progress bar, crowning, instant feedback, monitor attachment, envy cloud, group quest, appointment dynamics, countdown timer, moats, suspenseful limit, evanescent opportunity.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Competition",
            "optional": false,
            "field": "competition",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/competition\nBODY\n{\n  \"title\" : \"Competition\",\n  \"description\" : \"Competition Description\",\n  \"image\" : \"http://image.com/holiday.png\",\n  \"period\" : \"2018-01-30T00:00:00-03:00;+1M+\",\n  \"maxWinners\" : 3,\n  \"maxPlayers\" : -1,\n  \"operation\" : {\n    \"type\" : 1,\n    \"achievement_type\" : -1,\n    \"item\" : \"sell\",\n    \"sort\" : 0,\n    \"sub\" : false\n  },\n  \"requires\" : [ ],\n  \"rewards\" : [ {\n    \"total\" : 1,\n    \"type\" : 0,\n    \"item\" : \"point\",\n    \"operation\" : 0,\n    \"extra\" : { }\n  }, {\n    \"total\" : 10,\n    \"type\" : 0,\n    \"item\" : \"point\",\n    \"operation\" : 0,\n    \"extra\" : {\n      \"position\" : 1\n    }\n  } ],\n  \"notifications\" : [ {\n    \"event\" : 0,\n    \"type\" : 0,\n    \"scope\" : 0,\n    \"content\" : \"Parabéns você ganhou a competição\"\n  } ],\n  \"active\" : true,\n  \"autoExecute\" : true,\n  \"extra\" : {\n    \"holiday\" : \"Carnival\"\n  },\n  \"_id\" : \"competition\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CompetitionRest.java",
    "groupTitle": "Competition"
  },
  {
    "group": "Competition",
    "name": "Create_Join",
    "type": "post",
    "url": "/v3/competition/join",
    "title": "Create Join",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/competition/join"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Basic eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>To participate in a competition, players need to join it.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Join",
            "optional": false,
            "field": "Json",
            "description": "<p>Object with the following attributes: competition (string), player (string).</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/competition/join\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n \"competition\" : \"carnival\",\n \"player\" : \"ricardo\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CompetitionRest.java",
    "groupTitle": "Competition"
  },
  {
    "group": "Competition",
    "name": "DeleteCompetition",
    "type": "delete",
    "url": "/v3/competition/:id",
    "title": "Delete Competition",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/competition/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>competition Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CompetitionRest.java",
    "groupTitle": "Competition"
  },
  {
    "group": "Competition",
    "name": "Delete_Join",
    "type": "delete",
    "url": "/v3/competition/:id",
    "title": "Delete Join",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/competition/join/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "DELETE https://service2.funifier.com/v3/competition/join\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n \"competition\" : \"carnival\",\n \"player\" : \"ricardo\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CompetitionRest.java",
    "groupTitle": "Competition"
  },
  {
    "group": "Competition",
    "name": "Execute_Competition",
    "type": "get",
    "url": "/v3/competition/:id/execute",
    "title": "Execute Competition",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/competition/:id/execute"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CompetitionRest.java",
    "groupTitle": "Competition"
  },
  {
    "group": "Competition",
    "name": "QueryCompetition",
    "type": "get",
    "url": "/v3/competition",
    "title": "Query Competition",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/competition"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/competition?orderby=time&reverse=true",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Competition ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"action\"",
              "\"attributes\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;action&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CompetitionRest.java",
    "groupTitle": "Competition"
  },
  {
    "group": "Competition",
    "name": "Query_Joins",
    "type": "get",
    "url": "/v3/competition/join",
    "title": "Query Joins",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/competition/join"
      }
    ],
    "header": {
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Join ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "competition",
            "description": "<p>Competition ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player ID, eg. player@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"id\"",
              "\"competition\"",
              "\"player\"",
              "\"created\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;challenge&quot;, &quot;description&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CompetitionRest.java",
    "groupTitle": "Competition"
  },
  {
    "group": "Competition",
    "name": "Query_Leaders",
    "type": "get",
    "url": "/v3/competition/leader",
    "title": "Query Leaders",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/competition/leader"
      }
    ],
    "header": {
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>Leaders is a real-time view of the ranking of the competitors who are participating in the competition.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Competition</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "range",
            "description": "<p>Range allow you to define how many records you want to recovery, and from wich position. If you want, for example, to find 100 records starting at record number 2000, we can pass the key &quot;Range&quot; with the value &quot;items = 2000-100&quot; in the request header.</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CompetitionRest.java",
    "groupTitle": "Competition"
  },
  {
    "group": "Core_Drive",
    "name": "Query_All_Core_Drive",
    "type": "get",
    "url": "/v3/coredrive",
    "title": "Query All Core Drive",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/coredrive"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\n[\n  {\n      \"title\": \"Epic Meaning & Calling\",\n      \"_id\": \"CD1\"\n    },\n    {\n      \"title\": \"Development & Accomplishment\",\n      \"_id\": \"CD2\"\n    }\n]",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CoreDriveRest.java",
    "groupTitle": "Core_Drive"
  },
  {
    "group": "Core_Drive",
    "name": "Query_Core_Drive",
    "type": "get",
    "url": "/v3/coredrive/:id",
    "title": "Query Core Drive",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/coredrive/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CoreDriveRest.java",
    "groupTitle": "Core_Drive"
  },
  {
    "group": "Crown",
    "name": "CreateCrown",
    "type": "post",
    "url": "/v3/crown",
    "title": "Create Crown",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/crown"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>This gamification technique is an Emotional Reward that is given after overcome a big long challenge. One example is the mayor of foursquare mobile app.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Crown",
            "optional": false,
            "field": "crown",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/crown\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n  \"title\" : \"Prefeito\",\n  \"description\" : \"Quem mais compra\",\n  \"position\" : 1,\n  \"principalType\" : 0,\n  \"operation\" : {\n    \"type\" : 2,\n    \"achievement_type\" : -1,\n    \"item\" : \"55ce566bc75cd0436e9b383b\",\n    \"attribute\" : \"valor\",\n    \"sort\" : -1,\n    \"sub\" : false\n  },\n  \"period\" : {\n    \"type\" : 0,\n    \"timeAmount\" : 1,\n    \"timeScale\" : 6\n  },\n  \"notifications\" : [ {\n    \"event\" : 0,\n    \"type\" : 0,\n    \"scope\" : 0,\n    \"content\" : \"Voce ganhou a coroa de prefeito\"\n  } ]\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CrownRest.java",
    "groupTitle": "Crown"
  },
  {
    "group": "Crown",
    "name": "DeleteCrown",
    "type": "delete",
    "url": "/v3/crown/:id",
    "title": "Delete Crown",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/crown/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>crown Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CrownRest.java",
    "groupTitle": "Crown"
  },
  {
    "group": "Crown",
    "name": "FindCrown",
    "type": "get",
    "url": "/v3/crown/:id",
    "title": "Find Crown",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/crown/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>crown Id</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CrownRest.java",
    "groupTitle": "Crown"
  },
  {
    "group": "Crown",
    "name": "QueryCrown",
    "type": "get",
    "url": "/v3/crown",
    "title": "Query Crown",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/crown"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/CrownRest.java",
    "groupTitle": "Crown"
  },
  {
    "group": "Game_Technique",
    "name": "Query_All_Game_Technique",
    "type": "get",
    "url": "/v3/technique",
    "title": "Query All Game Technique",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/technique"
      }
    ],
    "header": {
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>GameTechnique id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>GameTechnique title</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "drives",
            "description": "<p>All core drives separated by &quot;,&quot; Eg. CD01,CD08</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, image, title, coreDrive, i18n.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"id\"",
              "\"title\"",
              "\"coreDrive\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;challenge&quot;, &quot;description&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/GameTechniqueRest.java",
    "groupTitle": "Game_Technique"
  },
  {
    "group": "Game_Technique",
    "name": "Query_Game_Technique",
    "type": "get",
    "url": "/v3/technique/:id",
    "title": "Query Game Technique",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/technique/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\n{\n    \"title\": \"Status Points\",\n    \"image\": \"https://studio2.funifier.com/img/gt/icon/black/GT01.png\",\n    \"coreDrives\": [\n      \"CD2\"\n    ],\n    \"i18n\": {\n      \"en-us\": {\n        \"description\": \"Status Points Keep Score. Consumable Points can be used to buy things\"\n      },\n      \"pt-br\": {\n        \"description\": \"Unidades de medição do status do jogador. Pontos de consumo podem ser usado para comprar coisas.\"\n      }\n    },\n    \"_id\": \"GT01\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/GameTechniqueRest.java",
    "groupTitle": "Game_Technique"
  },
  {
    "group": "Gamification",
    "name": "CloneGamification",
    "type": "post",
    "url": "/v3/gamification/clone/:id",
    "title": "Clone Gamification",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/gamification/clone/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Account token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "Authorization: Account NTQwZjE0YjAwZmZlZWI4YzJmZT\nContent-Type: application/json",
          "type": "json"
        },
        {
          "title": "Clone in different account",
          "content": "Authorization: Account YourSourceAccountToken\nX-Proxy-Authorization: Account YourTargetAccountToken\nContent-Type: application/json",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>source gamification apikey</p>"
          },
          {
            "group": "Parameter",
            "type": "Gamification",
            "optional": false,
            "field": "gamification",
            "description": "<p>that will be created and populated with source gamification database</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/gamification/clone/57752834db1c34291xx00x00 HTTP/1.1\nHost: service2.funifier.com\nContent-Type: application/json\n{\n  \"name\" : \"Gamification\",\n  \"description\" : \"Description\",\n  \"image\" : {\n    \"small\" : {\"url\" : \"http://me.com/logo.png\"},\n    \"medium\" : {\"url\" : \"http://me.com/logo.png\"},\n    \"original\" : {\"url\" : \"http://me.com/logo.png\"}\n  }\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"created_at\": 1467557136393,\n  \"updated_at\": 1467557136393,\n  \"description\": \"Gamification Insert\",\n  \"name\": \"Gamification Insert\",\n  \"accountId\": \"540f14b00ffeeb8c2xx00000\",\n  \"_id\": \"57792510e4b0c05320x000xx\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/GamificationRest.java",
    "groupTitle": "Gamification"
  },
  {
    "group": "Gamification",
    "name": "CreateGamification",
    "type": "post",
    "url": "/v3/gamification",
    "title": "Create Gamification",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/gamification"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Account token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "Authorization: Account NTQwZjE0YjAwZmZlZWI4YzJmZT\nContent-Type: application/json",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Gamification",
            "optional": false,
            "field": "gamification",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/gamification HTTP/1.1\nHost: service2.funifier.com\nContent-Type: application/json\n{\n  \"name\" : \"Gamification\",\n  \"description\" : \"Description\",\n  \"image\" : {\n    \"small\" : {\"url\" : \"http://me.com/logo.png\"},\n    \"medium\" : {\"url\" : \"http://me.com/logo.png\"},\n    \"original\" : {\"url\" : \"http://me.com/logo.png\"}\n  }\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"created_at\": 1467557136393,\n  \"updated_at\": 1467557136393,\n  \"description\": \"Gamification Insert\",\n  \"name\": \"Gamification Insert\",\n  \"accountId\": \"540f14b00ffeeb8c2xx00000\",\n  \"_id\": \"57792510e4b0c05320x000xx\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/GamificationRest.java",
    "groupTitle": "Gamification"
  },
  {
    "group": "Gamification",
    "name": "DeleteGamification",
    "type": "delete",
    "url": "/v3/gamification/:id",
    "title": "Delete Gamification",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/gamification/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Account token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Account eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Gamification ApiKey</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/GamificationRest.java",
    "groupTitle": "Gamification"
  },
  {
    "group": "Gamification",
    "name": "FindGamification",
    "type": "get",
    "url": "/v3/gamification/:id",
    "title": "Find Gamification",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/gamification/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Gamification ApiKey</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Account token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Account eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/GamificationRest.java",
    "groupTitle": "Gamification"
  },
  {
    "group": "Gamification",
    "name": "QueryGamification",
    "type": "get",
    "url": "/v3/gamification",
    "title": "Query Gamification",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/gamification"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET https://service2.funifier.com/v3/gamification?published_min=2016-03-20T00:00:00-03:00&orderby=name&reverse=true&max_results=10&name=YouName",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Gamification’s name. Eg. My Gamification</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"name\"",
              "\"description\"",
              "\"created_at\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: name, description, created_at.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/GamificationRest.java",
    "groupTitle": "Gamification"
  },
  {
    "group": "Global",
    "name": "Create_Global",
    "type": "post",
    "url": "/v3/global",
    "title": "Create Global",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/global"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Map",
            "optional": false,
            "field": "global",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/global\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n  \"title\" : \"Any title\"\n  \"live\" : false\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/GlobalRest.java",
    "groupTitle": "Global"
  },
  {
    "group": "Global",
    "name": "Delete_Global",
    "type": "delete",
    "url": "/v3/global/:id",
    "title": "Delete Global",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/global/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/GlobalRest.java",
    "groupTitle": "Global"
  },
  {
    "group": "Global",
    "name": "Query_Global",
    "type": "get",
    "url": "/v3/global/:id",
    "title": "Query Global",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/global/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/GlobalRest.java",
    "groupTitle": "Global"
  },
  {
    "group": "Last_Mile",
    "name": "Create_LastMile",
    "type": "post",
    "url": "/v3/lastmile",
    "title": "Create LastMile",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lastmile"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>This gamification technique are messages to be delivered in specific player progress situations to let the player know that they are very close to fishnish something. It works like a personal coach the drives the player to the path he/her ought to follow to complete the challenge, level, bonus and any other stuf that has a progression relation. Last mile drive allows you to connect this messages to a specific gamification techniques and specify the percentage of the progress it will be delivered. eg. when player complete 90% of a specific bonus goal, deliver a message like, if you sell just one more blue tennis for child in the next 2 hours you will earn U$ 300 in bonus. Its possible to define your own messages with parameters that are different on each game technique. In bonus technique you can use as parameters, a player, bonus and reward objects. You still can create your own variables to use in your messages, this variables can be prepared with a java script, that allows you to for example format dates.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "LastMile",
            "optional": false,
            "field": "lastmile",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/lastmile\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n\n{\n  \"title\": \"Mensagem de incentivo Seguro Vida\",\n  \"type\": 8,\n  \"item\": \"bonus_seguro_vida\",\n  \"start\": 95,\n  \"ends\": 100,\n  \"message\": \"{{player.name}}, fica esperto, com mais {{gap}} vendas de seguro de vida você alcança a {{reward.title}} e ganha um bônus de {{reais}}, você tem {{days}} dias para completar suas vendas, ou seja até {{ends}}\",\n  \"script\": \"void prepare(lastmile, params){\\n\\tint gap = new Double(params.progress.gap).intValue();\\n\\tString reais = FormatterUtil.numberCurrency(params.reward_total, \\\"BRL\\\", \\\"BR\\\", \\\"¤ #,##0.00\\\");\\n\\tint days = new Double((params.progress.end.getTime() - new Date().getTime())/(1000 * 60 * 60 * 24)).intValue();\\n\\tparams.put(\\\"gap\\\", gap);\\n\\tparams.put(\\\"reais\\\", reais); \\n\\tparams.put(\\\"days\\\", days); \\n\\tparams.put(\\\"ends\\\", DateUtil.format(params.progress.end, \\\"dd/MM/yyy\\\") + \\\" as \\\" + DateUtil.format(params.progress.end, \\\"HH:mm\\\")); \\n}\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LastMileRest.java",
    "groupTitle": "Last_Mile"
  },
  {
    "group": "Last_Mile",
    "name": "Delete_LastMile",
    "type": "delete",
    "url": "/v3/lastmile/:id",
    "title": "Delete LastMile",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lastmile/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LastMileRest.java",
    "groupTitle": "Last_Mile"
  },
  {
    "group": "Last_Mile",
    "name": "Query_All_LastMile",
    "type": "get",
    "url": "/v3/hook",
    "title": "Query All LastMile",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lastmile"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LastMileRest.java",
    "groupTitle": "Last_Mile"
  },
  {
    "group": "Last_Mile",
    "name": "Query_LastMile",
    "type": "get",
    "url": "/v3/lastmile/:id",
    "title": "Query LastMile",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lastmile/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LastMileRest.java",
    "groupTitle": "Last_Mile"
  },
  {
    "group": "LeaderBoard",
    "name": "CreateLeaderBoard",
    "type": "post",
    "url": "/v3/leaderboard",
    "title": "Create LeaderBoard",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/leaderboard"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "LeaderBoard",
            "optional": false,
            "field": "leaderboard",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/leaderboard\nBODY\n{\n  \"title\": \"General\",\n  \"principalType\": 0,\n  \"operation\": {\n    \"type\": 3,\n    \"achievement_type\": 0,\n    \"item\": \"55d1eddc9989ecc657c592ea\",\n    \"filters\": [],\n    \"sort\": -1,\n    \"sub\": false\n  },\n  \"period\": {\n    \"type\": 0,\n    \"timeAmount\": 1,\n    \"timeScale\": 7\n  },\n  \"principals\": []\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LeaderboardRest.java",
    "groupTitle": "LeaderBoard"
  },
  {
    "group": "LeaderBoard",
    "name": "DeleteLeaderBoard",
    "type": "delete",
    "url": "/v3/leaderboard/:id",
    "title": "Delete LeaderBoard",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/leaderboard/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>leaderboard Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LeaderboardRest.java",
    "groupTitle": "LeaderBoard"
  },
  {
    "group": "LeaderBoard",
    "name": "FindLeaderBoard",
    "type": "get",
    "url": "/v3/leaderboard/:id",
    "title": "Find LeaderBoard",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/leaderboard/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>LeaderBoard Id</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nCache-Control: no-store\nPragma: no-cache\n{\n    \"title\": \"Race to the top of Denali\",\n    \"description\": \"Here is how it stands across all climbers\",\n    \"operation\": {\n      \"achievement_type\": 0,\n      \"item\": \"54f3a5e2211578044e1af003\"\n    },\n    \"_id\": \"54f44b1b211578044e1af7ae\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LeaderboardRest.java",
    "groupTitle": "LeaderBoard"
  },
  {
    "group": "LeaderBoard",
    "name": "FindLeaders",
    "type": "get",
    "url": "/v3/leaderboard/:id/leaders",
    "title": "Find Leaders",
    "description": "<p>This method will return you get the leaderboard info and some data of each player in the leaderboard. These data returned in the leaders field are: &quot;player&quot;: the player id, &quot;position&quot;: current position in leaderboard, &quot;total&quot;: the total of anything you have defined in the operation used to calculate the leaders, eg. total points, &quot;previous_position&quot;: the position of the player in the past, if you are looking the current week leaderboard, this will be the previous week position, &quot;previous_total&quot;: the previous total</p>",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/leaderboard/:id/leaders"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>LeaderBoard Id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player’s unique identifier that should be used as a reference, for example in friend view. Eg. jogador@funifier.com. This field is required if you are executing this with parameter view equals VIEW_MIDDLE = 1 or VIEW_FRIENDS = 2.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "team",
            "description": "<p>Team’s unique identifier. Use this field if you want to get only players of specific team.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "sub",
            "description": "<p>Sub filter. Use this field to calculate leaderboard filtering by sub value. See in your leaderboard configuration in studio. Eg. Get leaders of McDonalds you can use sub=McDonalds.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "time_amount",
            "description": "<p>Time Amount, combine this field with Time Scale field. Eg. 5</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "allowedValues": [
              "4",
              "5",
              "6",
              "7",
              "8"
            ],
            "optional": false,
            "field": "time_scale",
            "description": "<p>Time Scale, combine this field with Time Amount field. Possible values are: HOUR = 4; DAY = 5; WEEK = 6; MONTH = 7; YEAR = 8;</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "start_date",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "end_date",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "allowedValues": [
              "0",
              "1",
              "2"
            ],
            "optional": false,
            "field": "view",
            "description": "<p>By default you get all the leaders, but you can get only friends of a specific player, or leaders that are positioned near by a specific player. Possible values are: VIEW_DEFAULT = 0, VIEW_MIDDLE = 1, VIEW_FRIENDS = 2.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET https://service2.funifier.com/v3/leaderboard/54f44b1b211578044e1af7ae/leaders\nAuthorization: Basic NTc4MzIxY2Q1YTczMDM4YzVmM2QyO",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nCache-Control: no-store\nPragma: no-cache\n{\n  \"leaderboard\": {\n    \"title\": \"Race to the top of Denali\",\n    \"description\": \"Here is how it stands across all climbers\",\n    \"operation\": {\n      \"achievement_type\": 0,\n      \"item\": \"54f3a5e2211578044e1af003\"\n    },\n    \"_id\": \"54f44b1b211578044e1af7ae\"\n  },\n  \"leaders\": [\n    {\n      \"player\": \"dilesh@viva-worldwide.com\",\n      \"name\": \"Dilesh\",\n      \"position\": 1,\n      \"total\": 100,\n      \"previous_position\": 0,\n      \"previous_total\": 0\n    },\n    {\n      \"player\": \"Carlo\",\n     \"name\": \"Carlo PALAZZESE\",\n     \"position\": 2,\n     \"total\": 1,\n     \"previous_position\": 0,\n     \"previous_total\": 0\n   }\n ]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LeaderboardRest.java",
    "groupTitle": "LeaderBoard"
  },
  {
    "group": "LeaderBoard",
    "name": "QueryLeaderBoard",
    "type": "get",
    "url": "/v3/leaderboard",
    "title": "Query LeaderBoard",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/leaderboard"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Leaderboard</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>Leaderboard title</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"team\"",
              "\"player\""
            ],
            "optional": false,
            "field": "type",
            "description": "<p>Type of principal</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, challenge, description, tags, range, active, when, rules, badge, points, items, requirements.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"id\"",
              "\"title\"",
              "\"description\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;challenge&quot;, &quot;description&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LeaderboardRest.java",
    "groupTitle": "LeaderBoard"
  },
  {
    "group": "LeaderBoard",
    "name": "Reset_Leaderboard",
    "type": "get",
    "url": "/v3/leaderboard/reset",
    "title": "Reset Leaderboard",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/leaderboard/reset"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LeaderboardRest.java",
    "groupTitle": "LeaderBoard"
  },
  {
    "group": "Level",
    "name": "CreateLevel",
    "type": "post",
    "url": "/v3/level",
    "title": "Create Level",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/level"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Level",
            "optional": false,
            "field": "level",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/level\nBODY\n{\n  \"level\" : \"Level\",\n  \"description\" : \"Level Description\",\n  \"position\" : 1,\n  \"minPoints\" : 100,\n  \"image\" : {\n    \"small\" : { \"url\" : \"http://funifier.com/level.png\" },\n    \"medium\" : { \"url\" : \"http://funifier.com/level.png\" },\n    \"original\" : { \"url\" : \"http://funifier.com/level.png\" }\n  }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LevelRest.java",
    "groupTitle": "Level"
  },
  {
    "group": "Level",
    "name": "DeleteLevel",
    "type": "delete",
    "url": "/v3/level/:id",
    "title": "Delete Level",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/level/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Level Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LevelRest.java",
    "groupTitle": "Level"
  },
  {
    "group": "Level",
    "name": "FindLevel",
    "type": "get",
    "url": "/v3/level/:id",
    "title": "Find Level",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/level/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Level Id</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LevelRest.java",
    "groupTitle": "Level"
  },
  {
    "group": "Level",
    "name": "QueryLevel",
    "type": "get",
    "url": "/v3/level",
    "title": "Query Level",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/level"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LevelRest.java",
    "groupTitle": "Level"
  },
  {
    "group": "Limits",
    "name": "Find_Limits",
    "type": "get",
    "url": "/v3/limits",
    "title": "Find Limits",
    "description": "<p>Return the status of usage and limits of gamification</p>",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/limits"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/limits",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"dailyApiRequests\": {\n        \"max\": 50,\n        \"remaining\": 17\n    }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LimitsRest.java",
    "groupTitle": "Limits"
  },
  {
    "group": "Lost",
    "name": "Create_Lost",
    "type": "post",
    "url": "/v3/lost",
    "title": "Create Lost",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lost"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "description": "<p>This gamification technique deduct the progress a player invested time into. Death prevention, which mostly results in Progress Loss, where users loses the 200 points they spent getting all the way up to the boss. When the player loses progress in duoling skills.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Lost",
            "optional": false,
            "field": "lost",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/lost\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n  \"title\" : \"Perda de pontos diario se nao acessar o sistema\",\n  \"operation\" : {\n    \"type\" : 1,\n    \"achievement_type\" : -1,\n    \"sort\" : -1,\n    \"sub\" : false\n  },\n  \"filterOperator\" : 6,\n  \"filterValue\" : 3.0,\n \"period\" : {\n   \"type\" : 0,\n   \"timeAmount\" : 1,\n   \"timeScale\" : 4\n },\n  \"debts\" : [ {\n    \"total\" : 10,\n    \"type\" : 0,\n    \"item\" : \"moedas\",\n    \"limit\" : 0\n  } ],\n  \"notifications\" : [ {\n    \"event\" : 0,\n    \"type\" : 0,\n    \"scope\" : 0,\n    \"content\" : \"Voce perdeu pontos por que nao acessou o sistema esta semana!\"\n  } ],\n  \"live\" : false\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LostRest.java",
    "groupTitle": "Lost"
  },
  {
    "group": "Lost",
    "name": "Delete_Lost",
    "type": "delete",
    "url": "/v3/lost/:id",
    "title": "Delete Lost",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lost/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LostRest.java",
    "groupTitle": "Lost"
  },
  {
    "group": "Lost",
    "name": "Execute_Lost",
    "type": "get",
    "url": "/v3/lost/execute/:id",
    "title": "Execute Lost",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lost/execute/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LostRest.java",
    "groupTitle": "Lost"
  },
  {
    "group": "Lost",
    "name": "Query_All_Losts",
    "type": "get",
    "url": "/v3/lost",
    "title": "Query All Lost",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lost"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LostRest.java",
    "groupTitle": "Lost"
  },
  {
    "group": "Lost",
    "name": "Query_Lost",
    "type": "get",
    "url": "/v3/lost/:id",
    "title": "Query Lost",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lost/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LostRest.java",
    "groupTitle": "Lost"
  },
  {
    "group": "Lottery",
    "name": "Create_Lottery",
    "type": "post",
    "url": "/v3/lottery",
    "title": "Create Lottery",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lottery"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>This gamification technique are rewards that go from one person to another - someone has to win. Rewards that are given to a select amount of winners by chance after they take a specific action, like purchasing a lottery ticket or entering a contest. Revolves around the rule that somebody has to win each time, and so as long as you “stay in the game” for long enough, the chances of you winning increases linearly.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Lottery",
            "optional": false,
            "field": "lottery",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/lottery\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n \"title\" : \"Sorteio de Viagem para Disney\",\n \"description\" : \"Cada 10 vendas de seguro auto realizados em 1 semana, voce ganha um ticket para participar do sorteio.\",\n \"image\" : \"http://funifier.com/sorteio.png\",\n \"tags\" : [\"viagem\", \"disney\"],\n \"drawDate\" : 1475364263803,\n \"autoExecute\" : true,\n \"choiceMethod\" : \"random_ticket\",\n \"maxWinners\" : 1.0,\n \"extra\" : {\n    \"support\" : \"faq@company.com\",\n    \"mobile\" : \"+18895687914\"\n  }\n \"notifications\" : [ {\n   \"event\" : 0,\n   \"type\" : 0,\n   \"scope\" : 0,\n   \"content\" : \"Parabens voce ganhou na loteria!\"\n } ]\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LotteryRest.java",
    "groupTitle": "Lottery"
  },
  {
    "group": "Lottery",
    "name": "Create_Ticket",
    "type": "post",
    "url": "/v3/lottery/ticket",
    "title": "Create Ticket",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lottery/ticket"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Basic eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>To participate in a lottery, players need to have tickets. More tickets represents more opportunities to win.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Ticket",
            "optional": false,
            "field": "Json",
            "description": "<p>Object with the following attributes: lottery (string), player (string), value (object) can be anything, numbers or text</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/lottery/ticket\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n \"lottery\" : \"loteria\",\n \"player\" : \"ricardo\",\n \"value\" : 7\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LotteryRest.java",
    "groupTitle": "Lottery"
  },
  {
    "group": "Lottery",
    "name": "Delete_Lottery",
    "type": "delete",
    "url": "/v3/lottery/:id",
    "title": "Delete Lottery",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lottery/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LotteryRest.java",
    "groupTitle": "Lottery"
  },
  {
    "group": "Lottery",
    "name": "Delete_Ticket",
    "type": "delete",
    "url": "/v3/lottery/ticket/:id",
    "title": "Delete Ticket",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lottery/ticket/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LotteryRest.java",
    "groupTitle": "Lottery"
  },
  {
    "group": "Lottery",
    "name": "Execute_Lottery",
    "type": "get",
    "url": "/v3/lottery/:id/execute",
    "title": "Execute Lottery",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lottery/execute/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LotteryRest.java",
    "groupTitle": "Lottery"
  },
  {
    "group": "Lottery",
    "name": "Query_All_Lottery",
    "type": "get",
    "url": "/v3/lottery/lottery",
    "title": "Query All Lottery",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lottery"
      }
    ],
    "header": {
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Lottery ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>Title</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "description",
            "description": "<p>Description</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "executed_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where executed date is bigger than this field.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "executed_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where executed date is lower than this field.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "tags",
            "description": "<p>All tags that must be separated by &quot;,&quot; Eg. sun,juice,party</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, title, description, image, drawDate, tags, choiceMethod, maxWinners, notifications, executedDate, createdDate.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"id\"",
              "\"title\"",
              "\"description\"",
              "\"image\"",
              "\"drawDate\"",
              "\"maxWinners\"",
              "\"executedDate\"",
              "\"createdDate\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;challenge&quot;, &quot;description&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LotteryRest.java",
    "groupTitle": "Lottery"
  },
  {
    "group": "Lottery",
    "name": "Query_All_Ticket",
    "type": "get",
    "url": "/v3/lottery/ticket",
    "title": "Query All Ticket",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lottery/ticket"
      }
    ],
    "header": {
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Ticket ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "lottery",
            "description": "<p>Lottery ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player ID, eg. player@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"id\"",
              "\"lottery\"",
              "\"player\"",
              "\"value\"",
              "\"created\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;challenge&quot;, &quot;description&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LotteryRest.java",
    "groupTitle": "Lottery"
  },
  {
    "group": "Lottery",
    "name": "Query_All_Winners",
    "type": "get",
    "url": "/v3/lottery/winner",
    "title": "Query All Winners",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lottery/winner"
      }
    ],
    "header": {
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/winner?published_min=2016-03-20T13:53:00-03:00&orderby=time&reverse=true&player=player@funifier.com&type=1\nAuthorization: Basic NTc3NTI4MzRkYjFjMzQyOTFkYTM0YTQ",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "lottery",
            "description": "<p>Identifier of the chosen type, if you chose the point type, then the item will be the id of a category point for example xp. eg. xp point id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player’s unique identifier that is receiving this achievement.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"player\"",
              "\"total\"",
              "\"type\"",
              "\"item\"",
              "\"time\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: player, total, type, item, time.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\n[\n  {\n      \"player\": \"player@funifier.com\",\n      \"total\": 1,\n      \"type\": 5,\n      \"item\": \"58b9586ee4b0e66287176d66\",\n      \"time\": 1497962136775,\n      \"extra\": {\n          \"ticket\": \"5943ceba8517662bd342620d\",\n          \"player_name\": \"Cleia Santos\",\n          \"player_image\": {\n              \"small\": {\"url\": \"photo.png\"},\n              \"medium\": {\"url\": \"photo.png\"},\n              \"original\": {\"url\": \"photo.png\"}\n          }\n      },\n      \"_id\": \"594916988517661881b33b96\"\n  }\n]",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LotteryRest.java",
    "groupTitle": "Lottery"
  },
  {
    "group": "Lottery",
    "name": "Query_Lottery",
    "type": "get",
    "url": "/v3/lottery/:id",
    "title": "Query Lottery",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lottery/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LotteryRest.java",
    "groupTitle": "Lottery"
  },
  {
    "group": "Lottery",
    "name": "Update_Lottery",
    "type": "put",
    "url": "/v3/lottery/:id",
    "title": "Update Lottery",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/lottery/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Lottery",
            "optional": false,
            "field": "lottery",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/LotteryRest.java",
    "groupTitle": "Lottery"
  },
  {
    "group": "Mobile",
    "name": "Create_App",
    "type": "post",
    "url": "/v3/mobile/app",
    "title": "Create App",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/app"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>App, is your gamification represented as a mobile application that you can install on your generic funifier mobile app, or create your white label mobile app that opens this app configuration.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "App",
            "optional": false,
            "field": "app",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/mobile/app\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n    \"title\": \"Funifier Mobile Application\",\n    \"description\": \"This gamification mobile application have being created to engage users to sell more around the world.\",\n    \"image\" : {\n        \"small\" : {\"url\" : \"http://www.xti.com.br/img/logo.png\"},\n        \"medium\" : {\"url\" : \"http://www.xti.com.br/img/logo.png\"},\n        \"original\" : {\"url\" : \"http://www.xti.com.br/img/logo.png\"}\n    },\n    \"active\": true,\n    \"extra\": {\n        \"company\": \"Funifier\"\n    }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "Mobile",
    "name": "Create_Device",
    "type": "post",
    "url": "/v3/mobile/device",
    "title": "Create Device",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/device"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>App, is your gamification represented as a mobile application that you can install on your generic funifier mobile app, or create your white label mobile app that opens this app configuration.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Device",
            "optional": false,
            "field": "device",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/mobile/device\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n    \"_id\": \"f17283GJIUl\",\n    \"player\": \"player@funifier.com\",\n    \"platform\": \"WNS\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "Mobile",
    "name": "Create_Item",
    "type": "post",
    "url": "/v3/mobile/item",
    "title": "Create Item",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/item"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>Item, inside every app you have several items that can be accessed by menus, each item contains a widget to display some content/feedback to the player;</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Item",
            "optional": false,
            "field": "item",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/mobile/item\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n    \"app\": \"app1\",\n    \"title\": \"Item1\",\n    \"widget\": \"GT01\",\n    \"section\": \"navigation\",\n    \"active\": true,\n    \"order\": 1,\n    \"extra\": {\n        \"company\": \"Funifier\"\n    }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "Mobile",
    "name": "Delete_App",
    "type": "delete",
    "url": "/v3/mobile/app/:id",
    "title": "Delete App",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/app/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "Mobile",
    "name": "Delete_Device",
    "type": "delete",
    "url": "/v3/mobile/device/:id",
    "title": "Delete Device",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/device/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "Mobile",
    "name": "Delete_Item",
    "type": "delete",
    "url": "/v3/mobile/item/:id",
    "title": "Delete Item",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/item/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "Mobile",
    "name": "Query_All_Apps",
    "type": "get",
    "url": "/v3/mobile/app",
    "title": "Query All Apps",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/app"
      }
    ],
    "header": {
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/mobile/app?published_min=2016-03-20T00:00:00-03:00&orderby=created&reverse=true&max_results=10&catalog=Catalog",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>App’s unique identifier. Eg. 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>Title name. Eg: My Mobile App</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, image</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"catalog\"",
              "\"itens\"",
              "\"image\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: catalog, itens, image.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "Mobile",
    "name": "Query_All_Devices",
    "type": "get",
    "url": "/v3/mobile/device",
    "title": "Query All Devices",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/device"
      }
    ],
    "header": {
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/mobile/device?orderby=created&reverse=true&max_results=10",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "device",
            "description": "<p>Device's unique identifier. Eg. 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player's unique identifier. Eg: player@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "platform",
            "description": "<p>Platform. Eg: APNS, WNS, BAIDU</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, image</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"catalog\"",
              "\"itens\"",
              "\"image\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: catalog, itens, image.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "Mobile",
    "name": "Query_All_Items",
    "type": "get",
    "url": "/v3/mobile/item",
    "title": "Query All Items",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/item"
      }
    ],
    "header": {
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/mobile/item?published_min=2016-03-20T00:00:00-03:00&orderby=created&reverse=true&max_results=10&catalog=Catalog",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Item’s unique identifier. Eg. 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "app",
            "description": "<p>App’s unique identifier. Eg. 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "widget",
            "description": "<p>Widget’s unique identifier. Eg. 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "section",
            "description": "<p>Section Eg: actions</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>Title name. Eg: My Mobile App</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, image</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"catalog\"",
              "\"itens\"",
              "\"image\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: catalog, itens, image.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "Mobile",
    "name": "Query_App",
    "type": "get",
    "url": "/v3/mobile/app/:id",
    "title": "Query App",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/app/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "Mobile",
    "name": "Query_Device",
    "type": "get",
    "url": "/v3/mobile/device/:id",
    "title": "Query Device",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/device/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "Mobile",
    "name": "Query_Item",
    "type": "get",
    "url": "/v3/mobile/item/:id",
    "title": "Query Item",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mobile/item/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MobileRest.java",
    "groupTitle": "Mobile"
  },
  {
    "group": "MysteryBox",
    "name": "Create_MysteryBox",
    "type": "post",
    "url": "/v3/mystery",
    "title": "Create MysteryBox",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mystery"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "MysteryBox",
            "optional": false,
            "field": "mysteryBox",
            "description": ""
          }
        ]
      }
    },
    "description": "<p>MysteryBox is a technique that rewards may be anything and will only be found out once the action is completed. In this case you can use this technique to display a slot machine for example.</p>",
    "examples": [
      {
        "title": "Option Probability:",
        "content": "POST https://service2.funifier.com/v3/mystery\nContent-Type: application/json\nAuthorization: Basic NTYwMDgzMDg5NDc4M2M3NTZkNGUyODdkOj\n{\n  \"title\" : \"Heads or Tails\",\n  \"type\" : \"option_probability\",\n  \"options\" : [ {\"value\" : \"heads\", \"probability\" : 0.5}, {\"value\" : \"tails\", \"probability\" : 0.5} ],\n  \"columns\" : 1,\n  \"requirements\" : [ {\n    \"total\" : 1,\n    \"type\" : 0,\n    \"item\" : \"544279769fbc0ab38ddd765d\",\n    \"operation\" : 1\n  } ],\n  \"win_chart\" : [ {\n    \"combination\" : [ \"heads\" ],\n    \"reward\" : {\n      \"total\" : 10,\n      \"type\" : 0,\n      \"item\" : \"544279769fbc0ab38ddd765d\",\n      \"operation\" : 0\n    }\n  } ],\n  \"limit\" : {\n\t  \"total\" : 10,\n\t  \"per\" : \"player\",\n\t  \"every\" : \"1w\"\n  },\n  \"_id\" : \"heads_or_tails\"\n}",
        "type": "json"
      },
      {
        "title": "Combination Probability:",
        "content": "POST https://service2.funifier.com/v3/mystery\nContent-Type: application/json\nAuthorization: Basic NTYwMDgzMDg5NDc4M2M3NTZkNGUyODdkOj\n{\n  \"title\" : \"Slot Machine\",\n  \"type\" : \"combination_probability\",\n  \"options\" : [ {\n    \"image\" : \"http://studio2.funifier.com/gt/widget/mystery/img/banana.png\",\n    \"value\" : \"banana\"\n  }, {\n    \"image\" : \"http://studio2.funifier.com/gt/widget/mystery/img/seven.png\",\n    \"value\" : \"seven\"\n  }, {\n    \"image\" : \"http://studio2.funifier.com/gt/widget/mystery/img/melon.png\",\n    \"value\" : \"melon\"\n  }, {\n    \"image\" : \"http://studio2.funifier.com/gt/widget/mystery/img/bar.png\",\n    \"value\" : \"bar\"\n  }, {\n    \"image\" : \"http://studio2.funifier.com/gt/widget/mystery/img/cherry.png\",\n    \"value\" : \"cherry\"\n  }, {\n    \"image\" : \"http://studio2.funifier.com/gt/widget/mystery/img/bigwin.png\",\n    \"value\" : \"bigwin\"\n  } ],\n  \"columns\" : 3,\n  \"requirements\" : [ {\"total\" : 4, \"type\" : 0, \"item\" : \"gt72_slot_machine_coin\", \"operation\" : 1} ],\n  \"win_chart\" : [ {\n    \"combination\" : [ \"bigwin\", \"bigwin\", \"bigwin\" ],\n    \"reward\" : { \"total\" : 200, \"type\" : 0, \"item\" : \"gt72_slot_machine_coin\", \"operation\" : 0 },\n    \"probability\" : 0.01\n  }, {\n    \"combination\" : [ \"bar\", \"bar\", \"bar\" ],\n    \"reward\" : { \"total\" : 50, \"type\" : 0, \"item\" : \"gt72_slot_machine_coin\", \"operation\" : 0 },\n    \"probability\" : 0.04\n  }, {\n    \"combination\" : [ \"seven\", \"seven\", \"seven\" ],\n    \"reward\" : { \"total\" : 20, \"type\" : 0, \"item\" : \"gt72_slot_machine_coin\", \"operation\" : 0 },\n    \"probability\" : 0.05\n  }, {\n    \"combination\" : [ \"banana\", \"seven\", \"bigwin\" ],\n    \"reward\" : { \"total\" : 16, \"type\" : 0, \"item\" : \"gt72_slot_machine_coin\", \"operation\" : 0 },\n    \"probability\" : 0.1\n  }, {\n    \"combination\" : [ \"cherry\", \"cherry\", \"cherry\" ],\n    \"reward\" : { \"total\" : 15, \"type\" : 0, \"item\" : \"gt72_slot_machine_coin\", \"operation\" : 0 },\n    \"probability\" : 0.1\n  }, {\n    \"combination\" : [ \"banana\", \"banana\", \"banana\" ],\n    \"reward\" : { \"total\" : 14, \"type\" : 0, \"item\" : \"gt72_slot_machine_coin\", \"operation\" : 0 },\n    \"probability\" : 0.2\n  }, {\n    \"combination\" : [ \"melon\", \"melon\", \"melon\" ],\n    \"reward\" : { \"total\" : 7, \"type\" : 0, \"item\" : \"gt72_slot_machine_coin\", \"operation\" : 0 },\n    \"probability\" : 0.2\n  }, {\n    \"combination\" : [ \"cherry\", \"banana\", \"melon\" ],\n    \"reward\" : { \"total\" : 4, \"type\" : 0, \"item\" : \"gt72_slot_machine_coin\", \"operation\" : 0 },\n    \"probability\" : 0.3\n  } ],\n  \"_id\" : \"gt72_slot_machine\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MysteryBoxRest.java",
    "groupTitle": "MysteryBox"
  },
  {
    "group": "MysteryBox",
    "name": "Delete_MysteryBox",
    "type": "delete",
    "url": "/v3/mystery/:id",
    "title": "Delete MysteryBox",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mystery/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MysteryBoxRest.java",
    "groupTitle": "MysteryBox"
  },
  {
    "group": "MysteryBox",
    "name": "Execute_MysteryBox",
    "type": "get",
    "url": "/v3/mystery/execute/:id",
    "title": "Execute MysteryBox",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mystery/execute/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET https://service2.funifier.com/v3/mystery/execute/dado?player=ricardo.lopes.costa@gmail.com\nAuthorization: Basic NTYwMDgzMDg5NDc4M2M3NTZkNGUyODdkOj",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MysteryBoxRest.java",
    "groupTitle": "MysteryBox"
  },
  {
    "group": "MysteryBox",
    "name": "Query_All_MysteryBox",
    "type": "get",
    "url": "/v3/mystery",
    "title": "Query All MysteryBox",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mystery"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MysteryBoxRest.java",
    "groupTitle": "MysteryBox"
  },
  {
    "group": "MysteryBox",
    "name": "Query_MysteryBox",
    "type": "get",
    "url": "/v3/mystery/:id",
    "title": "Query MysteryBox",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/mystery/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/MysteryBoxRest.java",
    "groupTitle": "MysteryBox"
  },
  {
    "group": "Notification",
    "name": "CreateNotification",
    "type": "post",
    "url": "/v3/notification",
    "title": "Create Notification",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/notification"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Notification",
            "optional": false,
            "field": "notification",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/notification\nBODY\n  {\n    \"player\": {\n      \"id\": \"ricardo@funifier.com\",\n      \"name\": \"Ricardo Lopes Costa\",\n      \"type\": \"player\"\n    },\n    \"item\": {\n      \"id\": \"578052b75a73038c5f3d0e77\",\n      \"name\": \"Visit\",\n      \"type\": \"action\"\n    },\n    \"definition\": {\n      \"event\": 0,\n      \"type\": 0,\n      \"scope\": 0,\n      \"content\": \"Ricardo Lopes Costa visited us\"\n    }\n  }",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/NotificationRest.java",
    "groupTitle": "Notification"
  },
  {
    "group": "Notification",
    "name": "QueryNotification",
    "type": "get",
    "url": "/v3/notification",
    "title": "Query Notification",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/notification"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player’s unique identifier. Eg. jogador@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"private\"",
              "\"newsfeed\""
            ],
            "optional": false,
            "field": "scope",
            "description": "<p>Scope of the notifications. Eg: private</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "tag",
            "description": "<p>Tag can be any text used to identify this notification for any kind of pourpose. Eg. happy</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "allowedValues": [
              "\"true\"",
              "\"false\""
            ],
            "optional": false,
            "field": "delete",
            "description": "<p>This options is allowed only when a player have being specified and the scope parameter is private. If set to true it will remove all notifications after it returns the result.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nCache-Control: no-store\nPragma: no-cache\n[\n  {\n    \"player\": {\n      \"id\": \"ricardo@funifier.com\",\n      \"name\": \"Ricardo Lopes Costa\",\n      \"type\": \"player\"\n    },\n    \"item\": {\n      \"id\": \"578052b75a73038c5f3d0e77\",\n      \"name\": \"Visit\",\n      \"type\": \"action\"\n    },\n    \"definition\": {\n      \"event\": 0,\n      \"type\": 0,\n      \"scope\": 1,\n      \"content\": \"Ricardo Lopes Costa visited us\"\n    },\n    \"timestamp\": \"2017-01-25T10:29:35.733-02:00\"\n  }\n]",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/NotificationRest.java",
    "groupTitle": "Notification"
  },
  {
    "group": "Package",
    "name": "Create_Package",
    "type": "post",
    "url": "/v3/package",
    "title": "Create Package",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/package"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Package",
            "optional": false,
            "field": "pack",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PackageRest.java",
    "groupTitle": "Package"
  },
  {
    "group": "Package",
    "name": "Delete_Package",
    "type": "delete",
    "url": "/v3/package/:id",
    "title": "Delete Package",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/package/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PackageRest.java",
    "groupTitle": "Package"
  },
  {
    "group": "Package",
    "name": "Find_Component_Types",
    "type": "get",
    "url": "/v3/package/component/type/:type",
    "title": "Find Component Types",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/package/component/type/:type"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "component",
            "description": "<p>type</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n[\n  {\n    \"_id\": \"5704e892e61a6c591f640d0b\",\n    \"label\": \"Coins\"\n  }\n]",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PackageRest.java",
    "groupTitle": "Package"
  },
  {
    "group": "Package",
    "name": "Install_Package",
    "type": "get",
    "url": "/v3/package/install/:id",
    "title": "Install Package",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/package/install/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PackageRest.java",
    "groupTitle": "Package"
  },
  {
    "group": "Package",
    "name": "Query_All_Installed_Package",
    "type": "get",
    "url": "/v3/package",
    "title": "Query All Package",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/package"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PackageRest.java",
    "groupTitle": "Package"
  },
  {
    "group": "Package",
    "name": "Query_All_Marketplace_Packages",
    "type": "get",
    "url": "/v3/package/marketplace",
    "title": "Query All Package Marketplace",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/package/marketplace"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Package ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>Title</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "description",
            "description": "<p>Description</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "tags",
            "description": "<p>All tags that must be separated by &quot;,&quot; Eg. sun,juice,party</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "techniques",
            "description": "<p>All techniques that must be separated by &quot;,&quot; Eg. GT01,GT02</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"private\"",
              "\"public\""
            ],
            "optional": false,
            "field": "visibility",
            "description": "<p>visibility</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id,title,description,image,screenshot,tags,techniques,visibility,components,provider.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"id\"",
              "\"title\"",
              "\"description\"",
              "\"image\"",
              "\"screenshot\"",
              "\"tags\"",
              "\"techniques\"",
              "\"visibility\"",
              "\"components\"",
              "\"provider\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;challenge&quot;, &quot;description&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PackageRest.java",
    "groupTitle": "Package"
  },
  {
    "group": "Package",
    "name": "Query_All_Package",
    "type": "get",
    "url": "/v3/package",
    "title": "Query All Package",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/package"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PackageRest.java",
    "groupTitle": "Package"
  },
  {
    "group": "Package",
    "name": "Query_Installed_Package",
    "type": "get",
    "url": "/v3/package/installed/:id",
    "title": "Query Package",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/package/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PackageRest.java",
    "groupTitle": "Package"
  },
  {
    "group": "Package",
    "name": "Query_Marketplace_Package",
    "type": "get",
    "url": "/v3/package/:id",
    "title": "Query Package",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/package/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PackageRest.java",
    "groupTitle": "Package"
  },
  {
    "group": "Package",
    "name": "Query_Package",
    "type": "get",
    "url": "/v3/package/:id",
    "title": "Query Package",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/package/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PackageRest.java",
    "groupTitle": "Package"
  },
  {
    "group": "Package",
    "name": "Unistall_Package",
    "type": "delete",
    "url": "/v3/package/:id",
    "title": "Delete Package",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/package/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PackageRest.java",
    "groupTitle": "Package"
  },
  {
    "group": "Player",
    "name": "AddPlayerFriend",
    "type": "get",
    "url": "/v3/player/:id/friend/:playerId",
    "title": "Add Player Friend",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/:id/friend/:playerId"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "AddPlayerFriendBulk",
    "type": "get",
    "url": "/v3/player/:id/friend/bulk",
    "title": "Add Player Friends Bulk",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/:id/friend/bulk"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example",
        "content": "POST /v3/player/:id/friend/bulk\nAuthorization: Basic NTk0OTY4MjhYTIyODA4YWQ5MmUyOjU5NDk2YmQ4OThlYWE==\nContent-Type: application/json\n[\n\t\"friend_1\",\n \"friend_2\",\n \"friend_3\"\n]",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "CreatePlayer",
    "type": "post",
    "url": "/v3/player",
    "title": "Create Player",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>The player is someone that is interacting in the gamification. eg. students and teachers can be players in some gamification. This players have an id and name in all gamifications and they can also have specific atributes for each gamification, this extra atributes can be specified in the extra field.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Player",
            "optional": false,
            "field": "player",
            "description": "<p>Json Object with the following attributes: _id, name, email, image, friends, teams(list of team ids), extra; _id (string) Player’s unique identifier, this will be used as a login; name (string) Player's name eg. Richard; image (object) Json Object; friends (array) list of friends ids, extra {object) map of extra attributes, with key and value;</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/player HTTP/1.1\nHost: service2.funifier.com\nAuthorization: Basic eyJhbGciOiJIUzUxMiIs\nContent-Type: application/json\n{\n  \"_id\" : \"player@funifier.com\",\n  \"name\" : \"Player Name\",\n  \"email\" : \"player@funifier.com\",\n  \"image\" : {\n    \"small\" : {\"url\" : \"http://me.com/photo.png\"},\n    \"medium\" : {\"url\" : \"http://me.com/photo.png\"},\n    \"original\" : {\"url\" : \"http://me.com/photo.png\"}\n  },\n  \"friends\" : [ \"ricardo@funifier.com\", \"sandra@funifier.com\" ],\n  \"teams\" : [ \"00000000000000000000111a\", \"00000000000000000000111b\" ],\n  \"extra\" : {\n    \"gender\" : \"male\",\n    \"mobile\" : \"+18895687914\",\n    \"company\" : \"coca-cola\"\n  }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "CreatePlayerAttribute",
    "type": "post",
    "url": "/v3/player/attribute",
    "title": "Create Player Attribute",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/attribute"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "PlayerAttribute",
            "optional": false,
            "field": "playerAttribute",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/player/attribute HTTP/1.1\nHost: service2.funifier.com\nAuthorization: Basic NTYwMDgzMDg5NDc4\nContent-Type: application/json\n{\n  \"name\" : \"company\",\n  \"type\" : \"unicode\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "DeletePlayer",
    "type": "delete",
    "url": "/v3/player/:id",
    "title": "Delete Player",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Player Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "DeletePlayerAttribute",
    "type": "delete",
    "url": "/v3/player/attribute/:id",
    "title": "Delete Player Attribute",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/attribute/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>PlayerAttributeId</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "DeletePlayerFriend",
    "type": "delete",
    "url": "/v3/player/:id/friend/:playerId",
    "title": "Delete Player Friend",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/:id/friend/:playerId"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "FindPlayer",
    "type": "get",
    "url": "/v3/player/:id",
    "title": "Find Player",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Player Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "FindPlayerStatus",
    "type": "get",
    "url": "/v3/player/:id/status",
    "title": "Find Status",
    "description": "<p>This method will return all the status info about the player, the follow fields are some of the result content you will get. &quot;positions&quot;: Are the current position of the player on each leaderboard. You need to configure a leaderboard to see it. &quot;level_progress&quot;: Have the % completion of current level, how much more points to level up, witch is the next level, and how much levels do we have. &quot;total_points&quot;: Show current game points. &quot;point_categories&quot;: Show how much points of each type the player have. For example, the player can have 10 XP points and 20 Carma points. &quot;total_challenges&quot;: Show the number of badges earned. &quot;challenge_progress&quot;: You can use this to show the Next Challenges. This shows the challenges in progress and % completion of each challenge. &quot;extra&quot;: You can use this field to store your special attributes.</p>",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/:id/status"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Player Id, you can also use the key word &quot;me&quot; to get the current authenticated player status as result</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET https://service2.funifier.com/v3/player/ricardo.lopes.costa@gmail.com/status\nAuthorization: Basic NTc4MzIxY2Q1YTczMDM4YzVm",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nCache-Control: no-store\nPragma: no-cache\n{\n  \"name\": \"Ricardo Lopes Costa\",\n  \"total_challenges\": 1,\n  \"challenges\": {\n    \"57805fb45a73038c5f3d12a4\": 1\n  },\n  \"total_points\": 23,\n  \"point_categories\": {\n    \"578052df5a73038c5f3d0ee4\": 20,\n    \"578052df5a73038c5f3d0abc\": 3\n  },\n  \"level_progress\": {\n    \"level\": {\n      \"level\": \"Rookie\",\n      \"position\": 0,\n      \"description\": \"You have joined our ranks.\",\n      \"_id\": \"57807e1a5a73038c5f3d1449\"\n    },\n    \"percent_completed\": 76.67,\n    \"next_points\": 7,\n    \"next_level\": {\n      \"level\": \"Beginner\",\n      \"position\": 1,\n      \"description\": \"The road ahead is long.\",\n      \"minPoints\": 30,\n      \"_id\": \"57807ef85a73038c5f3d14a7\"\n    },\n    \"total_levels\": 12,\n    \"percent\": 76.67\n  },\n  \"challenge_progress\": [\n    {\n      \"player\": \"ricardo.lopes.costa@gmail.com\",\n      \"challenge\": \"57bde5e85e1c92c50b3cea9e\",\n      \"rules_completed\": 2,\n      \"rules_total\": 4,\n      \"percent_completed\": 50,\n      \"rules\": [\n        {\n          \"rule\": \"57bde5e85e1c92c50b3cea9a\",\n          \"completed\": true,\n          \"times_completed\": 1,\n          \"times_required\": 0,\n          \"percent_completed\": 100\n        },\n        {\n          \"rule\": \"57bde5e85e1c92c50b3cea9b\",\n          \"completed\": true,\n          \"times_completed\": 1,\n          \"times_required\": 0,\n          \"percent_completed\": 100\n        },\n        {\n          \"rule\": \"57bde5e85e1c92c50b3cea9c\",\n          \"completed\": false,\n          \"times_completed\": 0,\n          \"times_required\": 0,\n          \"percent_completed\": 0\n        },\n        {\n          \"rule\": \"57bde5e85e1c92c50b3cea9d\",\n          \"completed\": false,\n          \"times_completed\": 0,\n          \"times_required\": 0,\n          \"percent_completed\": 0\n        }\n      ]\n    }\n  ],\n  \"positions\": [\n    {\n      \"boardId\": \"578157255a73038c5f3d21c7\",\n      \"position\": 1,\n      \"total\": 115,\n      \"previous_position\": 0,\n      \"previous_total\": 0\n    }\n  ],\n  \"level\": {\n    \"level\": \"Rookie\",\n    \"position\": 0,\n    \"description\": \"You have joined our ranks.\",\n    \"minPoints\": 1,\n    \"_id\": \"57807e1a5a73038c5f3d1449\"\n  },\n  \"extra\" : {\n    \"gender\" : \"male\",\n    \"mobile\" : \"+18895687914\",\n    \"company\" : \"VIVA\"\n  },\n  \"_id\": \"ricardo.lopes.costa@gmail.com\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "Find_All_Player_Status",
    "type": "get",
    "url": "/v3/player/status",
    "title": "Find All Status",
    "description": "<p>This method will return all the status info about the player, the follow fields are some of the result content you will get. &quot;positions&quot;: Are the current position of the player on each leaderboard. You need to configure a leaderboard to see it. &quot;level_progress&quot;: Have the % completion of current level, how much more points to level up, witch is the next level, and how much levels do we have. &quot;total_points&quot;: Show current game points. &quot;point_categories&quot;: Show how much points of each type the player have. For example, the player can have 10 XP points and 20 Carma points. &quot;total_challenges&quot;: Show the number of badges earned. &quot;challenge_progress&quot;: You can use this to show the Next Challenges. This shows the challenges in progress and % completion of each challenge. &quot;extra&quot;: You can use this field to store your special attributes.</p>",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/status"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player ID, eg. player@funifier.com, you can also use the key word &quot;me&quot; to search the current player data</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Player name, eg. Ricardo</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "teams",
            "description": "<p>All teams separated by &quot;,&quot; Eg. green, blue</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "friends",
            "description": "<p>All friends separated by &quot;,&quot; Eg. ricardo, igor</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"_id\"",
              "\"name\"",
              "\"image\"",
              "\"total_challenges\"",
              "\"challenges\"",
              "\"total_points\"",
              "\"point_categories\"",
              "\"total_catalog_items\"",
              "\"catalog_items\"",
              "\"level_progress\"",
              "\"challenge_progress\"",
              "\"teams\"",
              "\"friends\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;challenge&quot;, &quot;description&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "PlayerJoinTeam",
    "type": "get",
    "url": "/v3/player/:id/team/join/:teamId",
    "title": "Join in Team",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/:id/team/join/:teamId"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Player Id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "teamId",
            "description": "<p>Team Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "PlayerUnJoinTeam",
    "type": "get",
    "url": "/v3/player/:id/team/unjoin/:teamId",
    "title": "Unjoin from Team",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/:id/team/unjoin/:teamId"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Player Id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "teamId",
            "description": "<p>Team Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "QueryPlayer",
    "type": "get",
    "url": "/v3/player",
    "title": "Query Player",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          },
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Range",
            "description": "<p>items=0-100</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/player?published_min=2016-03-20T13:53:00-03:00&orderby=time&reverse=true&player=player@funifier.com&type=1",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player ID, eg. player@funifier.com, you can also use the key word &quot;me&quot; to search the current player data</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Player’s name.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Player’s email.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "teams",
            "description": "<p>All teams separated by &quot;,&quot; Eg. green, blue</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "friends",
            "description": "<p>All friends separated by &quot;,&quot; Eg. ricardo, igor</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "in",
            "description": "<p>Player Ids or Teams that the player belongs to, all separated by &quot;,&quot; Eg. player1,player2,team3,team4</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"name\"",
              "\"email\"",
              "\"created\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;name&quot;, &quot;email&quot;, &quot;created&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "QueryPlayerAttribute",
    "type": "get",
    "url": "/v3/player/attribute",
    "title": "Find Player Attributes",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/attribute"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "QueryPlayerFriends",
    "type": "get",
    "url": "/v3/player/:id/friend",
    "title": "Find Player Friends",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/friend"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "QueryPlayerTeams",
    "type": "get",
    "url": "/v3/player/:id/team",
    "title": "Find Player Teams",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/:id/team"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Player Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "UpdatePlayerStatus",
    "type": "put",
    "url": "/v3/player/:id/status",
    "title": "Update Status",
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Player",
    "name": "UpdateProfileImage",
    "type": "post",
    "url": "/v3/player/:id/image",
    "title": "Update Profile Image",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/player/:id/image"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/x-www-form-urlencoded\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>Update the player profile image with the url image path informed as a parameter.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "url",
            "description": "<p>the image url path for this player;</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/player/player@funifier.com/image\nAuthorization: Basic eyJhbGciOiJIUzUxMiIs==\nContent-Type: application/x-www-form-urlencoded\nurl=http://host.com/photo.png",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PlayerRest.java",
    "groupTitle": "Player"
  },
  {
    "group": "Point",
    "name": "CreatePoint",
    "type": "post",
    "url": "/v3/point",
    "title": "Create Point",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/point"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Point",
            "optional": false,
            "field": "point",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/point\nBODY\n{\n  \"category\" : \"Experience Points\",\n  \"shortName\" : \"XP\",\n  \"image\" : {\n    \"small\" : { \"url\" : \"http://funifier.com/point.png\" },\n    \"medium\" : { \"url\" : \"http://funifier.com/point.png\" },\n    \"original\" : { \"url\" : \"http://funifier.com/point.png\" }\n  }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PointRest.java",
    "groupTitle": "Point"
  },
  {
    "group": "Point",
    "name": "DeletePoint",
    "type": "delete",
    "url": "/v3/point/:id",
    "title": "Delete Point",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/point/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Point Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PointRest.java",
    "groupTitle": "Point"
  },
  {
    "group": "Point",
    "name": "FindPoint",
    "type": "get",
    "url": "/v3/point/:id",
    "title": "Find Action",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/point/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Point Id</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PointRest.java",
    "groupTitle": "Point"
  },
  {
    "group": "Point",
    "name": "QueryPoint",
    "type": "get",
    "url": "/v3/point",
    "title": "Query Point",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/point"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/PointRest.java",
    "groupTitle": "Point"
  },
  {
    "group": "Question",
    "name": "CreateQuestion",
    "type": "post",
    "url": "/v3/question",
    "title": "Create Question",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/question"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>Question is something you want to ask the player. A question can be made up of answering options or not. In addition there are several different types of questions. Questions can be used to gather information from the player or to evaluate the player. In the case of being used for evaluation of the player the questions can have a grade. See below some examples of types of questions that can be asked. MULTIPLE_CHOICE: In response to a question (the text for which may include an image), the respondent chooses from multiple answers. There are two types of multiple choice questions - single answer (where there is only one correct answer) and multiple answer (where the student can pick all answers that apply). TRUE_FALSE: In response to a question (the text for which may include an image), the student selects either True or False. MATCHING: Matching questions provide a list of sub-questions along with a list of answers. The respondent must &quot;match&quot; the correct answers with each question. SHORT_ANSWER: Short answer questions require respondents to type a word or phrase in response to a question (that may include an image). Answers may or may not be case sensitive and can include more than one correct answer. Acceptable answers can be a word or a phrase, but must match one of your correct answers exactly. It is a good idea to keep the required answer as short as possible to avoid missing a correct answer that is phrased differently. SELECT_MISSING_WORDS: Select missing words questions allow instructors to create questions that require students to select words or phrases from a drop down menu embedded into a question text. DRAG_AND_DROP_INTO_TEXT: Students are asked to drag and drop text boxes into a questions text. These could be used a fill in the blank questions to make a sentence true or to match definitions to terms ESSAY: The essay question type gives the respondent room to compose a longer essay in response to a question (that may include an image). These must be scored manually by an instructor.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Question",
            "optional": false,
            "field": "question",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Mutiple Choice",
        "content": "POST /v3/question\nBODY\n{\n  \"type\" : \"MULTIPLE_CHOICE\",\n  \"question\" : \"Quem descobriu o Brasil?\",\n  \"grade\" : 1.0,\n  \"choices\" : [ {\n    \"answer\" : \"Pedro Alvares Cabral\",\n    \"grade\" : 1.0\n  }, {\n    \"answer\" : \"Dom Pedro I\",\n    \"grade\" : 0.0\n  }, {\n    \"answer\" : \"Princesa Isabel\",\n    \"grade\" : 0.0\n  } ],\n  \"select\" : \"one_answer\",\n  \"feedbacks\" : [ {\n    \"event\" : \"correct\",\n    \"message\" : \"Parabéns você acertou\"\n  }, {\n    \"event\" : \"wrong\",\n    \"message\" : \"Que pena você errou\"\n  } ],\n  \"extra\": {\n    \"competition\": \"christmas\"\n  },\n  \"limit\": {\n    \"total\": 1,\n    \"per\": \"player\",\n    \"every\": \"1d\"\n  },\n  \"action\": \"5aa26fa8d9a7203f16c99d17\"\n}",
        "type": "json"
      },
      {
        "title": "True/False",
        "content": "POST /v3/question\nBODY\n{\n  \"type\" : \"TRUE_FALSE\",\n  \"question\" : \"2+2=4\",\n  \"grade\" : 1.0,\n  \"choices\" : [ ],\n  \"correctAnswer\" : true,\n  \"feedbacks\" : [ {\n    \"event\" : \"correct\",\n    \"message\" : \"Parabéns você acertou\"\n  }, {\n    \"event\" : \"wrong\",\n    \"message\" : \"Que pena você errou\"\n  } ],\n  \"extra\" : { }\n}",
        "type": "json"
      },
      {
        "title": "Matching",
        "content": "POST /v3/question\nBODY\n{\n  \"type\" : \"MATCHING\",\n  \"question\" : \"Faça a co-relacao entre os números e sua representação em romanos\",\n  \"grade\" : 1.0,\n  \"choices\" : [ {\n    \"answer\" : \"I\",\n    \"question\" : \"1\"\n  }, {\n    \"answer\" : \"II\",\n    \"question\" : \"2\"\n  }, {\n    \"answer\" : \"III\",\n    \"question\" : \"3\"\n  } ],\n  \"feedbacks\" : [ {\n    \"event\" : \"correct\",\n    \"message\" : \"Parabéns você acertou\"\n  }, {\n    \"event\" : \"wrong\",\n    \"message\" : \"Que pena você errou\"\n  } ],\n  \"extra\" : { }\n}",
        "type": "json"
      },
      {
        "title": "Short Answer",
        "content": "POST /v3/question\nBODY\n{\n  \"type\" : \"SHORT_ANSWER\",\n  \"question\" : \"Qual o nome da bola amarela que fica no céu?\",\n  \"grade\" : 1.0,\n  \"choices\" : [ {\n    \"answer\" : \"Sol\",\n    \"grade\" : 1.0\n  }, {\n    \"answer\" : \"Sun\",\n    \"grade\" : 0.5\n  } ],\n  \"caseSensitive\" : false,\n  \"feedbacks\" : [ {\n    \"event\" : \"correct\",\n    \"message\" : \"Parabéns você acertou\"\n  }, {\n    \"event\" : \"wrong\",\n    \"message\" : \"Que pena você errou\"\n  } ],\n  \"extra\" : { }\n}",
        "type": "json"
      },
      {
        "title": "Selecting Missing Words",
        "content": "POST /v3/question\nBODY\n{\n  \"type\" : \"SELECT_MISSING_WORDS\",\n  \"question\" : \"A [[1]] é a melhor [[2]] de gamification?\",\n  \"grade\" : 1.0,\n  \"choices\" : [ {\n    \"answer\" : \"Funifier\"\n  }, {\n    \"answer\" : \"Plataforma\"\n  }, {\n    \"answer\" : \"Bola\"\n  }, {\n    \"answer\" : \"Sapato\"\n  } ],\n  \"feedbacks\" : [ {\n    \"event\" : \"correct\",\n    \"message\" : \"Parabéns você acertou\"\n  }, {\n    \"event\" : \"wrong\",\n    \"message\" : \"Que pena você errou\"\n  } ],\n  \"extra\" : { }\n}",
        "type": "json"
      },
      {
        "title": "Drag and Drop into Text",
        "content": "POST /v3/question\nBODY\n{\n  \"type\" : \"DRAG_AND_DROP_INTO_TEXT\",\n  \"question\" : \"A [[1]] é a melhor [[2]] de gamification?\",\n  \"grade\" : 1.0,\n  \"choices\" : [ {\n    \"answer\" : \"Funifier\"\n  }, {\n    \"answer\" : \"Plataforma\"\n  }, {\n    \"answer\" : \"Bola\"\n  }, {\n    \"answer\" : \"Sapato\"\n  } ],\n  \"feedbacks\" : [ {\n    \"event\" : \"correct\",\n    \"message\" : \"Parabéns você acertou\"\n  }, {\n    \"event\" : \"wrong\",\n    \"message\" : \"Que pena você errou\"\n  } ],\n  \"extra\" : { }\n}",
        "type": "json"
      },
      {
        "title": "Essay",
        "content": "POST /v3/question\nBODY\n{\n  \"type\" : \"ESSAY\",\n  \"question\" : \"Qual a sua definição sobre gamificação?\",\n  \"grade\" : 1.0,\n  \"choices\" : [ ],\n  \"totalLines\" : 5,\n  \"feedbacks\" : [ ],\n  \"extra\" : { }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/QuestionRest.java",
    "groupTitle": "Question"
  },
  {
    "group": "Question",
    "name": "CreateQuestionLog",
    "type": "post",
    "url": "/v3/question/log",
    "title": "Create Question Log",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/question/log"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>QuestionLog represent a player's answers to a given question. For each type of question we have different response formats. Below are examples of how to structure the response for each type. When registering a QuestionLog you will receive the result of the evaluation of this response with the grade, percentage of correctness and any feedbacks. You may also get an error message if, for example, you have reported an invalid formatted response.</p>",
    "examples": [
      {
        "title": "Mutiple Choice",
        "content": "POST /v3/question/log\nBODY\n{\n  \"player\" : \"ricardo.lopes.costa@gmail.com\",\n  \"question\" : \"multiple_choice\",\n  \"answer\" : [ \"Pedro Alvares Cabral\" ]\n}",
        "type": "json"
      },
      {
        "title": "True False",
        "content": "POST /v3/question/log\nBODY\n{\n  \"player\" : \"ricardo.lopes.costa@gmail.com\",\n  \"question\" : \"true_false\",\n  \"answer\" : true\n}",
        "type": "json"
      },
      {
        "title": "Short Answer",
        "content": "POST /v3/question/log\nBODY\n{\n  \"player\" : \"ricardo.lopes.costa@gmail.com\",\n  \"question\" : \"short_answer\",\n  \"answer\" : \"SOL\"\n}",
        "type": "json"
      },
      {
        "title": "Matching",
        "content": "POST /v3/question/log\nBODY\n{\n  \"player\" : \"ricardo.lopes.costa@gmail.com\",\n  \"question\" : \"matching\",\n  \"answer\" : {\n\t  \"1\" : \"I\",\n\t  \"2\" : \"II\",\n\t  \"3\" : \"III\"\n\t}\n}",
        "type": "json"
      },
      {
        "title": "Select Missing Words",
        "content": "POST /v3/question/log\nBODY\n{\n  \"player\" : \"ricardo.lopes.costa@gmail.com\",\n  \"question\" : \"select_missing_words\",\n  \"answer\" : {\n\t  \"1\" : \"Funifier\",\n\t  \"2\" : \"Plataforma\"\n\t}\n}",
        "type": "json"
      },
      {
        "title": "Drag and Drop into Text",
        "content": "POST /v3/question/log\nBODY\n{\n  \"player\" : \"ricardo.lopes.costa@gmail.com\",\n  \"question\" : \"drag_and_drop_into_text\",\n  \"answer\" : {\n\t  \"1\" : \"Funifier\",\n\t  \"2\" : \"Plataforma\"\n\t}\n}",
        "type": "json"
      },
      {
        "title": "Essay",
        "content": "POST /v3/question/log\nBODY\n{\n  \"player\" : \"ricardo.lopes.costa@gmail.com\",\n  \"question\" : \"essay\",\n  \"answer\" : \"This is my answer for essay question.\"\n}",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "QuestionLog",
            "optional": false,
            "field": "questionLog",
            "description": "<p>Json Object with the following attributes: player, question, answer. Question (string) Question unique identifier that is being executed; Player (string) Player’s unique identifier that is executing the action; Answer (object) Eg: [&quot;Pedro Alvares Cabral&quot;];</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/QuestionRest.java",
    "groupTitle": "Question"
  },
  {
    "group": "Question",
    "name": "DeleteQuestion",
    "type": "delete",
    "url": "/v3/question/:id",
    "title": "Delete Question",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/question/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>competition Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/QuestionRest.java",
    "groupTitle": "Question"
  },
  {
    "group": "Question",
    "name": "DeleteQuestionLog",
    "type": "delete",
    "url": "/v3/question/log/:id",
    "title": "Delete Question Log",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/question/log/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>question log Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/QuestionRest.java",
    "groupTitle": "Question"
  },
  {
    "group": "Question",
    "name": "FindQuestion",
    "type": "get",
    "url": "/v3/question/:id",
    "title": "Find Question",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/question/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Question Id</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/QuestionRest.java",
    "groupTitle": "Question"
  },
  {
    "group": "Question",
    "name": "QueryQuestion",
    "type": "get",
    "url": "/v3/question",
    "title": "Query Question",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/question"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          },
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Range",
            "description": "<p>items=0-100</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/question?orderby=time&reverse=true",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Question ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"action\"",
              "\"attributes\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;action&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/QuestionRest.java",
    "groupTitle": "Question"
  },
  {
    "group": "Question",
    "name": "QueryQuestionLog",
    "type": "get",
    "url": "/v3/question/log",
    "title": "Query Question Log",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/question/log"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/question/log?published_min=2016-03-20T00:00:00-03:00&orderby=time&reverse=true&max_results=10&player=ricardo.lopes.costa@gmail.com",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player’s unique identifier. Eg. jogador@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "question",
            "description": "<p>Question unique identifier. Eg: 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"question\"",
              "\"player\"",
              "\"time\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: actionId, userId, time.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/QuestionRest.java",
    "groupTitle": "Question"
  },
  {
    "group": "Question",
    "name": "QueryQuestionLog_Aggregate",
    "type": "post",
    "url": "/v3/question/log/aggregate",
    "title": "Query Question Log Aggregate",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/question/log/aggregate"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          },
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Range",
            "description": "<p>items=0-100</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/question/log/aggregate?published_min=2016-03-20T00:00:00-03:00&player=ricardo.lopes.costa@gmail.com",
        "type": "json"
      },
      {
        "title": "Total by Player",
        "content": "POST /v3/question/log/aggregate?action=buy&published_min=-10d&player=ricardo.lopes.costa@gmail.com\nAuthorization: Basic NTk0OTY4MjU5OGVhYTIyODA4YWQ5MmUyOjU5NDk2YmQ4OThlYWE==\nContent-Type: application/json\n[\n\t\"{ $group: {_id: {player:'$player'}, total: {$sum: 1} }}\"\n]",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player’s unique identifier. Eg. jogador@funifier.com</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "question",
            "description": "<p>Question unique identifier. Eg: 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "List",
            "optional": false,
            "field": "aggregations",
            "description": "<p>List of aggregations in mongodb aggregation framework syntax. if you dont specify it will use the default that count the actionlogs grouped by players: [&quot;{$group: {_id: &quot;$userId&quot;, total: {$sum: 1}, start: {$min: &quot;$time&quot;}, end: {$max: &quot;$time&quot;}}}&quot;]</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/QuestionRest.java",
    "groupTitle": "Question"
  },
  {
    "group": "Scheduler",
    "name": "CreateScheduler",
    "type": "post",
    "url": "/v3/scheduler",
    "title": "Create Scheduler",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/scheduler"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Scheduler",
            "optional": false,
            "field": "scheduler",
            "description": ""
          }
        ]
      }
    },
    "description": "<p>To see examples of how to create your cron expressions take a look at http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger.html</p>",
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/scheduler\nBODY\n{\n    \"active\" : true,\n    \"name\": \"Teste\",\n    \"cron\": \"0 0/20 * * * ?\",\n    \"timezone\": \"America/Sao_Paulo\",\n    \"script\": \"void execute(scheduler){ println 'every 20 minutos run ' + scheduler.id + ' for company ' + scheduler.extra.company;}\",\n    \"extra\": {\n    \t\t\"company\": \"funifier\"\n    }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/SchedulerRest.java",
    "groupTitle": "Scheduler"
  },
  {
    "group": "Scheduler",
    "name": "DeleteScheduler",
    "type": "delete",
    "url": "/v3/scheduler/:id",
    "title": "Delete Scheduler",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/scheduler/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Scheduler Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/SchedulerRest.java",
    "groupTitle": "Scheduler"
  },
  {
    "group": "Scheduler",
    "name": "Execute_Scheduler",
    "type": "get",
    "url": "/v3/scheduler/execute/:id",
    "title": "Execute Scheduler",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/scheduler/execute/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Scheduler Id</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      }
    },
    "description": "<p>This method is useful to debug your scheduler, to see how it will behave after you publish it.</p>",
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/SchedulerRest.java",
    "groupTitle": "Scheduler"
  },
  {
    "group": "Scheduler",
    "name": "FindScheduler",
    "type": "get",
    "url": "/v3/scheduler/:id",
    "title": "Find Scheduler",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/scheduler/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Scheduler Id</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/SchedulerRest.java",
    "groupTitle": "Scheduler"
  },
  {
    "group": "Scheduler",
    "name": "Next_Execution_Times",
    "type": "get",
    "url": "/v3/scheduler/next/:id",
    "title": "Next Execution Times",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/scheduler/next/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Scheduler Id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "reference",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      }
    },
    "description": "<p>Discover the next date/time after now when the scheduler will be executed.</p>",
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/SchedulerRest.java",
    "groupTitle": "Scheduler"
  },
  {
    "group": "Scheduler",
    "name": "QueryScheduler",
    "type": "get",
    "url": "/v3/scheduler",
    "title": "Query Scheduler",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/scheduler"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/scheduler?orderby=time&reverse=true",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Action ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"actionId\"",
              "\"userId\"",
              "\"time\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: actionId, userId, time.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/SchedulerRest.java",
    "groupTitle": "Scheduler"
  },
  {
    "group": "Scheduler",
    "name": "QuerySchedulerLog",
    "type": "get",
    "url": "/v3/scheduler/log",
    "title": "Query Scheduler Log",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/scheduler/log"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          },
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Range",
            "description": "<p>items=0-100</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/scheduler/log?published_min=2016-03-20T00:00:00-03:00&orderby=time&reverse=true&max_results=10&item=schedulerid",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "item",
            "description": "<p>Scheduler’s unique identifier. Eg: 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"actionId\"",
              "\"userId\"",
              "\"time\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: actionId, userId, time.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/SchedulerRest.java",
    "groupTitle": "Scheduler"
  },
  {
    "group": "Statistics",
    "name": "Find_Api_Statistics",
    "type": "get",
    "url": "/v3/statistics/api",
    "title": "Find Api Statistics",
    "description": "<p>Return the statistics related to api requests</p>",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/statistics/api"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/statistics/api",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"lastApiRequest\": 1527350618902,\n    \"hourlyApiRequests\": 1,\n    \"dailyApiRequests\": 638,\n    \"monthlyApiRequests\": 14306,\n    \"hourlyGetRequests\": 1,\n    \"dailyGetRequests\": 439,\n    \"monthlyGetRequests\": 10688,\n    \"hourlyPostRequests\": 1,\n    \"dailyPostRequests\": 140,\n    \"monthlyPostRequests\": 2982,\n    \"endpoints\": {\n        \"widget\": {\n            \"lastApiRequest\": 1527348913011,\n            \"hourlyApiRequests\": 2,\n            \"dailyApiRequests\": 4,\n            \"monthlyApiRequests\": 190,\n            \"hourlyGetRequests\": 2,\n            \"dailyGetRequests\": 4,\n            \"monthlyGetRequests\": 190,\n            \"hourlyPostRequests\": 1,\n            \"dailyPostRequests\": 1,\n            \"monthlyPostRequests\": 1\n        },\n        \"action\": {\n            \"lastApiRequest\": 1527349340566,\n            \"hourlyApiRequests\": 70,\n            \"dailyApiRequests\": 186,\n            \"monthlyApiRequests\": 3823,\n            \"hourlyGetRequests\": 70,\n            \"dailyGetRequests\": 97,\n            \"monthlyGetRequests\": 1285,\n            \"hourlyPostRequests\": 1,\n            \"dailyPostRequests\": 90,\n            \"monthlyPostRequests\": 2539\n        }\n    }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/StatisticsRest.java",
    "groupTitle": "Statistics"
  },
  {
    "group": "Statistics",
    "name": "Find_Bad_Statistics",
    "type": "get",
    "url": "/v3/statistics/bad",
    "title": "Find Bad Statistics",
    "description": "<p>Return the statistics related every bad api requests, requests that fail for some reason</p>",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/statistics/bad"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/statistics/bad",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"lastBadRequest\": 1527281475001,\n    \"hourlyBadRequests\": 4,\n    \"dailyBadRequests\": 4,\n    \"monthlyBadRequests\": 4,\n    \"hourlyGetRequests\": 4,\n    \"dailyGetRequests\": 4,\n    \"monthlyGetRequests\": 4,\n    \"hourlyPostRequests\": 1,\n    \"dailyPostRequests\": 1,\n    \"monthlyPostRequests\": 1,\n    \"endpoints\": {\n        \"widget\": {\n            \"lastBadRequest\": 1527281475001,\n            \"hourlyBadRequests\": 4,\n            \"dailyBadRequests\": 4,\n            \"monthlyBadRequests\": 4,\n            \"hourlyGetRequests\": 4,\n            \"dailyGetRequests\": 4,\n            \"monthlyGetRequests\": 4,\n            \"hourlyPostRequests\": 1,\n            \"dailyPostRequests\": 1,\n            \"monthlyPostRequests\": 1\n        }\n    }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/StatisticsRest.java",
    "groupTitle": "Statistics"
  },
  {
    "group": "Statistics",
    "name": "Find_Trigger_Statistics",
    "type": "get",
    "url": "/v3/statistics/trigger",
    "title": "Find Trigger Statistics",
    "description": "<p>Return the statistics related to trigger executions</p>",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/statistics/trigger"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/statistics/trigger",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"lastTriggerExecution\": 1527350899205,\n    \"hourlyTriggerExecutions\": 440,\n    \"dailyTriggerExecutions\": 61009,\n    \"monthlyTriggerExecutions\": 69719,\n    \"triggers\": {\n        \"59e3fd7822774e6a2a4659f8\": {\n            \"lastTriggerExecution\": 1527350899205,\n            \"hourlyTriggerExecutions\": 440,\n            \"dailyTriggerExecutions\": 61009,\n            \"monthlyTriggerExecutions\": 69719\n        }\n    }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/StatisticsRest.java",
    "groupTitle": "Statistics"
  },
  {
    "group": "Swap",
    "name": "Acquire",
    "type": "post",
    "url": "/v3/swap/acquire",
    "title": "Acquire",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/swap/acquire"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>This is used when a player wants to buy the items offered in a swap. It will deduct from buyer the requirements defined in the swap. And it will credit the rewards definid in the swap.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Acquire",
            "optional": false,
            "field": "acquire",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/swap/acquire\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n    \"swap\": \"58b97dcee4b00e431b3135f7\",\n    \"buyer\": \"jogador\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/SwapRest.java",
    "groupTitle": "Swap"
  },
  {
    "group": "Swap",
    "name": "Create_Swap",
    "type": "post",
    "url": "/v3/swap",
    "title": "Create Swap",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/swap"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>Swap allow a player (seller) to exchange items with other players (buyers). The seller can create a swap request were he/her can define what are the items he/her offer (rewards), and what are the items he/her wants (requirements). It will deduct from seller the rewards defined in the swap.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Swap",
            "optional": false,
            "field": "The",
            "description": "<p>json object with all item fields.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/swap\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n    \"name\": \"Swap Request\",\n    \"description\": \"Swap description\",\n    \"seller\": \"player1\",\n    \"requires\" : [ {\n        \"total\" : 1,\n        \"type\" : 0,\n        \"item\" : \"points\",\n        \"operation\" : 1\n      }],\n    \"rewards\": [ {\n        \"total\" : 1,\n        \"type\" : 0,\n        \"item\" : \"coins\"\n      }\n    ],\n    \"extra\": {\n        \"provider\": \"wecare\"\n    }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/SwapRest.java",
    "groupTitle": "Swap"
  },
  {
    "group": "Swap",
    "name": "Delete_Swap",
    "type": "delete",
    "url": "/v3/swap/:id",
    "title": "Delete Swap",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/swap/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/SwapRest.java",
    "groupTitle": "Swap"
  },
  {
    "group": "Swap",
    "name": "Receive",
    "type": "post",
    "url": "/v3/swap/receive",
    "title": "Receive",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/swap/receive"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>This is used when the seller wants to receive the items requested after swap has being acquired buy a buyer. It will credit the requirements definid in the swap to the seller.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Receive",
            "optional": false,
            "field": "receive",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/swap/receive\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n    \"swap\": \"58b97dcee4b00e431b3135f7\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/SwapRest.java",
    "groupTitle": "Swap"
  },
  {
    "group": "Team",
    "name": "Add_member",
    "type": "get",
    "url": "/v3/team/:id/member/add/:playerId",
    "title": "Add member in Team",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/team/:id/member/add/:playerId"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Team Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TeamRest.java",
    "groupTitle": "Team"
  },
  {
    "group": "Team",
    "name": "CreateTeam",
    "type": "post",
    "url": "/v3/team",
    "title": "Create Team",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/team"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Team",
            "optional": false,
            "field": "team",
            "description": "<p>Json Object with the following attributes: name, description, image</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/team HTTP/1.1\nHost: service2.funifier.com\nAuthorization: Basic eyJhbGciOiJIUzUxMiIs\nContent-Type: application/json\n{\n  \"name\" : \"Team Sales\",\n  \"description\" : \"Team that are included all salers of company\",\n  \"image\" : {\n    \"small\" : {\"url\" : \"http://me.com/photo.png\"},\n    \"medium\" : {\"url\" : \"http://me.com/photo.png\"},\n    \"original\" : {\"url\" : \"http://me.com/photo.png\"}\n  }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TeamRest.java",
    "groupTitle": "Team"
  },
  {
    "group": "Team",
    "name": "DeleteTeam",
    "type": "delete",
    "url": "/v3/team/:id",
    "title": "Delete Team",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/team/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Team Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TeamRest.java",
    "groupTitle": "Team"
  },
  {
    "group": "Team",
    "name": "FindTeam",
    "type": "get",
    "url": "/v3/team/:id",
    "title": "Find Team",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/team/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Team Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TeamRest.java",
    "groupTitle": "Team"
  },
  {
    "group": "Team",
    "name": "QueryTeam",
    "type": "get",
    "url": "/v3/team",
    "title": "Query Team",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/team"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          },
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Range",
            "description": "<p>items=0-100</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "team",
            "description": "<p>Team IDs, all separated by &quot;,&quot; Eg. team3,team4</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Team’s name.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"name\"",
              "\"email\"",
              "\"created\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;name&quot;, &quot;email&quot;, &quot;created&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TeamRest.java",
    "groupTitle": "Team"
  },
  {
    "group": "Team",
    "name": "QueryTeamMembers",
    "type": "get",
    "url": "/v3/team/:id/member",
    "title": "Find All Members",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/team/:id/member"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Team Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TeamRest.java",
    "groupTitle": "Team"
  },
  {
    "group": "Team",
    "name": "Query_Team_Member_IDs",
    "type": "get",
    "url": "/v3/team/:id/member",
    "title": "Find All Member IDs",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/team/:id/memberids"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Team Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TeamRest.java",
    "groupTitle": "Team"
  },
  {
    "group": "Team",
    "name": "Remove_member",
    "type": "get",
    "url": "/v3/team/:id/member/remove/:playerId",
    "title": "Remove player from Team",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/team/:id/member/remove/:playerId"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Team Id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "playerId",
            "description": "<p>Player Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TeamRest.java",
    "groupTitle": "Team"
  },
  {
    "group": "Trigger",
    "name": "CreateTrigger",
    "type": "post",
    "url": "/v3/trigger",
    "title": "Create Trigger",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/trigger"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Trigger",
            "optional": false,
            "field": "trigger",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/trigger HTTP/1.1\nAuthorization: Basic NTk4Yzg2OTY2MzkwMzM5YjFiYjgyYzA5O==\nContent-Type: application/json\n{\n    \"name\": \"After Register Action Log\",\n    \"entity\": \"action\",\n    \"event\": \"after_win\",\n    \"script\": \"void trigger(event, entity, player, database){\\r\\n   println 'event:' + event + ', player:' + player;\\r\\n}\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TriggerRest.java",
    "groupTitle": "Trigger"
  },
  {
    "group": "Trigger",
    "name": "DeleteTrigger",
    "type": "delete",
    "url": "/v3/trigger/:id",
    "title": "Delete Trigger",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/trigger/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Trigger Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TriggerRest.java",
    "groupTitle": "Trigger"
  },
  {
    "group": "Trigger",
    "name": "Execute_Trigger",
    "type": "get",
    "url": "/v3/trigger/execute/:id",
    "title": "Execute Trigger",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/trigger/execute/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Trigger</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "o",
            "description": "<p>Achievement or Entity, it depends on the trigger event type</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      }
    },
    "description": "<p>This method is useful to debug your trigger code, to see how it will behave after you publish it.</p>",
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/trigger/execute/599cf0e9b27c7e3c16608609?player=player@gmail.com\nHost: service2.funifier.com\nAuthorization: Basic NTk4Yzg2OTY2MzkwMzM5YjFiYjgyYzA5o==\nContent-Type: application/json\n{\n \"actionId\" : \"sell\",\n \"userId\" : \"player@gmail.com\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TriggerRest.java",
    "groupTitle": "Trigger"
  },
  {
    "group": "Trigger",
    "name": "FindTrigger",
    "type": "get",
    "url": "/v3/action/:id",
    "title": "Find Trigger",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/trigger/:id"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Trigger Id</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TriggerRest.java",
    "groupTitle": "Trigger"
  },
  {
    "group": "Trigger",
    "name": "QueryTrigger",
    "type": "get",
    "url": "/v3/trigger",
    "title": "Query Trigger",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/trigger"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Trigger's ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Trigger's Name</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "entity",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "event",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "script",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, lottery, player, value, created.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"name\"",
              "\"entity\"",
              "\"event\"",
              "\"script\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: &quot;id&quot;, &quot;name&quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/TriggerRest.java",
    "groupTitle": "Trigger"
  },
  {
    "group": "Upload",
    "name": "Delete_File",
    "type": "delete",
    "url": "/v3/upload/:id",
    "title": "Delete File",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/upload/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Upload Id</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/UploadRest.java",
    "groupTitle": "Upload"
  },
  {
    "group": "Upload",
    "name": "Query_Uploads",
    "type": "get",
    "url": "/v3/upload",
    "title": "Query Uploads",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/upload"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/upload?published_min=2016-03-20T00:00:00-03:00&orderby=time&reverse=true&max_results=10",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field. You can also search using keywords like -1d (last day) or -30m (last 30 minutes). The allowed units are y (Year), M (Month), d (Day), h (Hour), m (Minute), s (Second) and w (Week);</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"actionId\"",
              "\"userId\"",
              "\"time\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: actionId, userId, time.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/UploadRest.java",
    "groupTitle": "Upload"
  },
  {
    "group": "Upload",
    "name": "Upload_File",
    "type": "post",
    "url": "/v3/upload/file",
    "title": "Upload File",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/upload/file"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/upload/file\nHost: service2.funifier.com\nAuthorization: Basic eyJhbGciOiJIUzUxMiIs\nContent-Type: application/json\n-----------------------------10219345292684023641693847312\nContent-Disposition: form-data; name=\"file\"; filename=\"funifier.png\"\nContent-Type: image/png\n\nPNG file content ...\n-----------------------------10219345292684023641693847312\nContent-Disposition: form-data; name=\"extra\"\n\n{\"session\":\"images\",\"name\":\"arquivo\"}\n-----------------------------10219345292684023641693847312--",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nCache-Control: no-store\nPragma: no-cache\n{\n    \"_id\": \"5926104c8517667bbdf63c33\",\n    \"content_type\": \"image/png\",\n    \"extension\": \"png\",\n    \"extra\": {\n      \"session\": \"images\",\n      \"name\": \"arquivo\"\n    },\n    \"filename_original\": \"funifier.png\",\n    \"filename\": \"5926104c8517667bbdf63c32_funifier.png\",\n    \"bucket\": \"funifier/games/57bde3635e1c92c50b3ce6ff/images\",\n    \"url\": \"https://s3.amazonaws.com/funifier/games/57bde3635e1c92c50b3ce6ff/images/5926104c8517667bbdf63c32_funifier.png\",\n    \"time\": 1495666764893,\n    \"size\": 3622\n  }",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/UploadRest.java",
    "groupTitle": "Upload"
  },
  {
    "group": "Util",
    "name": "Cron_Expression_Evaluation",
    "type": "post",
    "url": "/v3/cron/evaluate",
    "title": "Cron Expression Evaluation",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/cron/evaluate"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST /v3/cron/evaluate\n{\n    \"expression\": \"0 0 10 ? * MON 2018\",\n    \"language\": \"en\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\n{\n    \"expression\": \"0 0 10 ? * MON 2018\",\n    \"description\": \"At 10:00 AM, only on Monday, only in 2018\",\n    \"language\": \"en\",\n    \"valid\": true\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/UtilRest.java",
    "groupTitle": "Util"
  },
  {
    "group": "Util",
    "name": "Date_Format",
    "type": "get",
    "url": "/v3/date/format",
    "title": "Date Format",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/date/format"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "date",
            "description": "<p>Date in milliseconds</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/util/date/format?date=1467466144782",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\n{\n    \"output\": \"2016-07-02T10:32:57-03:00\",\n    \"input\": \"1467466377863\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/UtilRest.java",
    "groupTitle": "Util"
  },
  {
    "group": "Util",
    "name": "Date_Parse",
    "type": "get",
    "url": "/v3/date/parse",
    "title": "Date Parse",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/date/parse"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "date",
            "description": "<p>Date</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/util/date/parse?date=2016-07-02T10:32:57-03:00\nGET /v3/util/date/parse?date=-1y",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\n{\n    \"output\": 1467466572868,\n    \"input\": \"2016-07-02T10:32:57-03:00\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/UtilRest.java",
    "groupTitle": "Util"
  },
  {
    "group": "Virtual_Goods",
    "name": "Create_Catalog",
    "type": "post",
    "url": "/v3/virtualgoods/catalog",
    "title": "Create Catalog",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/virtualgoods/catalog"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>Catalogs, allows you to organize your incentives or virtual goods. You can divide goods by type.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Catalog",
            "optional": false,
            "field": "catalog",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/virtualgoods/catalog\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n   \"catalog\": \"Gift Cards Catalog\",\n   \"image\": {\n     \"small\": {\n       \"url\": \"http://iconmegamart.com/images/reward.png\"\n     },\n     \"medium\": {\n       \"url\": \"http://iconmegamart.com/images/reward.png\"\n     },\n     \"original\": {\n       \"url\": \"http://iconmegamart.com/images/reward.png\"\n      }\n   },\n   \"extra\": {\n    \t\"provider\": \"wecare\"\n    }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/VirtualGoodsRest.java",
    "groupTitle": "Virtual_Goods"
  },
  {
    "group": "Virtual_Goods",
    "name": "Create_Item",
    "type": "post",
    "url": "/v3/virtualgoods/item",
    "title": "Create Item",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/virtualgoods/item"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>Items are the things you will make available for your players to buy. Each Item is composed by the following fields. The &quot;catalogId&quot; field represents the catalog where this item will be available. The &quot;amount&quot; field indicates the quantity of this available item in your stock. If you want to make this item unlimited use -1. The &quot;start&quot; and &quot;end&quot; fields are dates in milliseconds format, which represent the period in which this item will be available, outside this period no player will be able to buy the item. The &quot;limit&quot; field defines the limit of times that the item can be purchased at a certain frequency of time by the players, for example if the player can buy the item at most twice a day then you can set the &quot;limit&quot; as well {&quot;Total&quot;: 2, &quot;per&quot;: &quot;player&quot;, &quot;every&quot;: &quot;1d&quot;}. Within the &quot;limit&quot; object there are the &quot;total&quot; fields that indicate the limit of times the item can be purchased, the &quot;per&quot; field that can receive the values ​​&quot;player&quot;, &quot;team&quot;, &quot;gamification&quot;, and field &quot;Every&quot; that receives an expression to define the period that this limit applies. This expression is composed of a number and a unit of time &quot;1d&quot; = 1 day, &quot;10h&quot; = 10 hours. The possible units of time in the expression are &quot;y&quot; Year, &quot;M&quot; Month, &quot;d&quot; Day, &quot;h&quot; Hour, &quot;m&quot; Minute, &quot;w&quot; Week. The &quot;requires&quot; field defines the requirements for the purchase of the item. This field is an array of objects composed of the fields &quot;total&quot;, &quot;type&quot;, &quot;item&quot; and &quot;operation&quot;. For example if the purchase of the item requires the debit of 10 points of the type &quot;coins&quot; and the verification if the player is in the &quot;master&quot; level then we can define the &quot;requires&quot; as follows, [{&quot;total&quot;: 10, Type &quot;, 0,&quot; item &quot;:&quot; coins &quot;,&quot; operation &quot;: 1}, {&quot; total &quot;: 1,&quot; type &quot;, 3,&quot; item &quot;:&quot; master &quot;,&quot; operation &quot;: 0}]. The &quot;type&quot; field defines the type of &quot;achievement&quot; and can receive the values ​​0 &quot;point&quot;, 1 &quot;challenge&quot;, 2 &quot;item&quot;, 3 &quot;level, 4 rown&quot;, 5 &quot;lottery&quot;, 6 &quot;mystery box&quot; , 7 &quot;character star stats&quot; and 8 &quot;bonus&quot;. The &quot;operation&quot; field can receive the values ​​1 &quot;deduct&quot; and &quot;verify&quot;. The &quot;rewards&quot; field defines all the additional rewards in addition to the item being purchased, this field follows the same logic as the &quot;requires&quot; field, but does not have the &quot;operation&quot; field. All objects listed in the &quot;rewards&quot; field will be credited to the player. For example if in addition to the item being purchased, the player must also receive two more nails as a reward, so you can set the rewards as follows [{&quot;total&quot;: 2, &quot;type&quot;, 0, &quot;item&quot;: &quot;Nails&quot;}. The &quot;extra&quot; field allows you to add additional custom fields to the item. This field is a key and value map. The key must contain only a-z characters in lowercase letters and no special characters or spaces. In the value field you can have any type of object, text, number, boolean etc. The &quot;owned&quot; field indicates how many times the item has already been purchased, this is an automatically updated field after each purchase. Therefore it is not necessary to enter this field in the creation of the item.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Item",
            "optional": false,
            "field": "item",
            "description": "<p>The json object with all item fields.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/virtualgoods/item\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n    \"catalogId\": \"gifts\",\n    \"name\": \"Pendrive\",\n    \"description\": \"Incredible pendrive to help you transfer files from one place to another.\",\n    \"amount\": 100,\n    \"active\": true,\n    \"start\": 1488510000000,\n    \"end\": 1490929200000,\n    \"limit\" : {\n\t        \"total\" : 1,\n\t        \"per\" : \"player\",\n\t        \"every\" : \"1h\"\n    },\n    \"requires\" : [ {\n        \"total\" : 1,\n        \"type\" : 0,\n        \"item\" : \"points\",\n        \"operation\" : 1\n      }],\n    \"rewards\": [ {\n        \"total\" : 1,\n        \"type\" : 0,\n        \"item\" : \"coins\"\n      }\n    ],\n    \"notifications\" : [ {\n        \"event\" : 0,\n        \"type\" : 0,\n        \"scope\" : 99,\n        \"content\" : \"you purchased an iron\"\n      } ],\n    \"extra\": {\n        \"provider\": \"wecare\"\n    },\n    \"image\": {\n      \"small\": {\n        \"url\": \"https://s3.amazonaws.com/funifier_node/540f14d70ffeeb8c2fe11767/07a30f5015bf9682a021.png\"\n      },\n      \"medium\": {\n        \"url\": \"https://s3.amazonaws.com/funifier_node/540f14d70ffeeb8c2fe11767/07a30f5015bf9682a021.png\"\n      },\n      \"original\": {\n        \"url\": \"https://s3.amazonaws.com/funifier_node/540f14d70ffeeb8c2fe11767/07a30f5015bf9682a021.png\"\n      }\n    }\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/VirtualGoodsRest.java",
    "groupTitle": "Virtual_Goods"
  },
  {
    "group": "Virtual_Goods",
    "name": "Create_Purchase",
    "type": "post",
    "url": "/v3/virtualgoods/purchase",
    "title": "Create Purchase",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/virtualgoods/purchase"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>This endpoint allow players to purchase items in gamification</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Purchase",
            "optional": false,
            "field": "purchase",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/virtualgoods/purchase\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n    \"item\": \"58b97dcee4b00e431b3135f7\",\n    \"player\": \"jogador\",\n    \"extra\": {\n    \t\t\"upgrade\": \"house\"\n    }\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success:",
          "content": "HTTP/1.1 200 OK\n{\n    \"achievements\": [\n        {\n            \"player\": \"ricardo.lopes.costa@gmail.com\",\n            \"total\": -1,\n            \"type\": 1,\n            \"item\": \"points\",\n            \"time\": 1504128698188,\n            \"_id\": \"59a72eba421c48195f90f5c9\"\n        },\n        {\n            \"player\": \"ricardo.lopes.costa@gmail.com\",\n            \"total\": 1,\n            \"type\": 2,\n            \"item\": \"iron\",\n            \"time\": 1504128698199,\n            \"extra\": {\n                \"upgrade\": \"id da casa que tera upgrade\"\n            },\n            \"_id\": \"59a72eba421c48195f90f5ca\"\n        }\n    ],\n    \"restrictions\": [],\n    \"status\": \"OK\"\n}",
          "type": "json"
        },
        {
          "title": "Unauthorized:",
          "content": "HTTP/1.1 200 OK\n{\n    \"achievements\": [],\n    \"restrictions\": [\n        \"insufficient_requirements\",\n        \"exceeded_purchase_limit\"\n    ],\n    \"status\": \"UNAUTHORIZED\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/VirtualGoodsRest.java",
    "groupTitle": "Virtual_Goods"
  },
  {
    "group": "Virtual_Goods",
    "name": "Delete_Catalog",
    "type": "delete",
    "url": "/v3/virtualgoods/catalog/:id",
    "title": "Delete Catalog",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/virtualgoods/catalog/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/VirtualGoodsRest.java",
    "groupTitle": "Virtual_Goods"
  },
  {
    "group": "Virtual_Goods",
    "name": "Delete_Item",
    "type": "delete",
    "url": "/v3/virtualgoods/item/:id",
    "title": "Delete Item",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/virtualgoods/item/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/VirtualGoodsRest.java",
    "groupTitle": "Virtual_Goods"
  },
  {
    "group": "Virtual_Goods",
    "name": "Query_All_Catalogs",
    "type": "get",
    "url": "/v3/virtualgoods/catalog",
    "title": "Query All Catalogs",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/virtualgoods/catalog"
      }
    ],
    "header": {
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/virtualgoods/catalog?published_min=2016-03-20T00:00:00-03:00&orderby=created&reverse=true&max_results=10&catalog=Catalog",
        "type": "json"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Catalog’s unique identifier. Eg. 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "catalog",
            "description": "<p>Catalog name. Eg: My Catalog</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, image</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"catalog\"",
              "\"itens\"",
              "\"image\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: catalog, itens, image.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/VirtualGoodsRest.java",
    "groupTitle": "Virtual_Goods"
  },
  {
    "group": "Virtual_Goods",
    "name": "Query_All_Items",
    "type": "get",
    "url": "/v3/virtualgoods/item",
    "title": "Query All Items",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/virtualgoods/item"
      }
    ],
    "header": {
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example:",
        "content": "GET /v3/virtualgoods/item?published_min=2016-03-20T00:00:00-03:00&orderby=created&reverse=true&max_results=10&catalog=Catalog",
        "type": "json"
      }
    ],
    "description": "<p>Items are the things you will make available for your players to buy.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Item’s unique identifier. Eg. 56eec9f3e4b0f4bddb77a83f</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "catalog",
            "description": "<p>Item name. Eg: My Catalog</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Item name. Eg: My Item</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "description",
            "description": "<p>Item description</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "player",
            "description": "<p>Player identifier, if this parameter is informed for each item returned, the system will also evaluate if there is any type of restriction for the player to buy the item. This additional field called &quot;restrictions&quot; is a list that contains the keys of the detected constraint types. Here is an example of the &quot;restrictions&quot; field: [&quot;insufficient_requirements&quot;, &quot;item_out_of_time&quot;]. The possible constraint values are: &quot;insufficient_requirements&quot; when the player does not have all the required requirements in the &quot;requires&quot; field; &quot;Item_out_of_time&quot; when the current time is outside the period stipulated in the &quot;start&quot; and &quot;end&quot; fields of the item; &quot;Item_disabled&quot; when the item has the &quot;active&quot; field equal to false, &quot;limit_exceeded&quot; when the criterion set in the &quot;limit&quot; field is exceeded in that period and &quot;item_sold_out&quot; when item purchases have reached the limit set in the &quot; Amount &quot;.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fields",
            "description": "<p>All fields that must be returned separated by &quot;,&quot; Some available fields are: id, image</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "q",
            "description": "<p>Allow you to find documents that match the Query Criteria defined. If you want to find documents where title equals super use the criteria title:&quot;super&quot;. You can also query sub fields of the documents, eg. extra.field:&quot;happiness&quot;. If you want to define many criterias, just separate by comma, eg. title:&quot;super&quot;, extra.field:&quot;happiness&quot;. You can use operators, for example if you want to find documents where score are greater than 7, you can use, score: { $gt: 7}. To find documents that contains all the specified tags, use something like tags: {$all: [&quot;car&quot;,&quot;love&quot;]}. Learn more at https://docs.mongodb.com/manual/reference/operator/query/#query-selectors</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_min",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The lower bound is inclusive. It brings data where plublished date is bigger than this field.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "published_max",
            "description": "<p>Bounds on the entry publication date. Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00. The upper bound is exclusive. It brings data where plublished date is lower than this field.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"catalog\"",
              "\"id\"",
              "\"name\"",
              "\"amount\""
            ],
            "optional": false,
            "field": "orderby",
            "description": "<p>By default, rows appear in order by row number. To specify a diferent way to order the rows use the orderby to specify a given column to sort. Eg: catalog, itens, image.</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "reverse",
            "description": "<p>Reverse and orderby can also be combined in order to sort by a column in descending order. To sort in descending order, combine this field with the orderby parameter. Eg true for descending order.</p>"
          },
          {
            "group": "Parameter",
            "type": "int",
            "optional": false,
            "field": "max_results",
            "description": "<p>Maximum number of results to be retrieved</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/VirtualGoodsRest.java",
    "groupTitle": "Virtual_Goods"
  },
  {
    "group": "Virtual_Goods",
    "name": "Query_Catalog",
    "type": "get",
    "url": "/v3/virtualgoods/catalog/:id",
    "title": "Query Catalog",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/virtualgoods/catalog/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/VirtualGoodsRest.java",
    "groupTitle": "Virtual_Goods"
  },
  {
    "group": "Virtual_Goods",
    "name": "Query_Item",
    "type": "get",
    "url": "/v3/virtualgoods/item/:id",
    "title": "Query Item",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/virtualgoods/item/:id"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiIs\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/VirtualGoodsRest.java",
    "groupTitle": "Virtual_Goods"
  },
  {
    "group": "Webhook",
    "name": "Delete_Webhook",
    "type": "delete",
    "url": "/v3/hook/:id",
    "title": "Delete Webhook",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/hook/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "description": "<p>This is the unsubscribe REST endpoint for webhooks. On a successful unsubscribe, return a 200 status code.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/WebhookRest.java",
    "groupTitle": "Webhook"
  },
  {
    "group": "Webhook",
    "name": "Query_All_Webhooks",
    "type": "get",
    "url": "/v3/hook",
    "title": "Query All Webhooks",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/hook"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/WebhookRest.java",
    "groupTitle": "Webhook"
  },
  {
    "group": "Webhook",
    "name": "Query_Webhook",
    "type": "get",
    "url": "/v3/hook/:id",
    "title": "Query Webhook",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/hook/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/WebhookRest.java",
    "groupTitle": "Webhook"
  },
  {
    "group": "Webhook",
    "name": "Subscribe_Webhook",
    "type": "post",
    "url": "/v3/hook",
    "title": "Subscribe Webhook",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/hook"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Basic eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>The big benefit to Webhooks is consumers wouldn't need to poll for changes, but could instead wait for hooks to deliver the payload. Additionally, producers can provide real-time updates with fewer devoted resources (compared to polling). You POST a subscription /v3/hook requesting to receive hooks at some target URL. Every time the event happens, Funifier will ping you at the target URL with the payload. After we're done, we can cleanup with a DELETE (/v3/hook/:id);</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Webhook",
            "optional": false,
            "field": "webhook",
            "description": "<p>Json Object with the following attributes: target_url and event; event (string) can be &quot;achievement_created&quot;;</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/hook\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n  \"target_url\": \"https://yoursystem.com/unique_target_url\",\n  \"event\" : \"achievement_created\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/WebhookRest.java",
    "groupTitle": "Webhook"
  },
  {
    "group": "Webhook",
    "name": "Unsubscribe_Webhook",
    "type": "post",
    "url": "/v3/hook",
    "title": "Unsubscribe Webhook",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/hook/unsubscribe"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header",
          "content": "\"Authorization\": \"Basic eyJhbGciOiJIUzUxMiIs\"\n\"Content-Type\": \"application/json\"",
          "type": "json"
        }
      ]
    },
    "description": "<p>You have to ways to unsubscribe your applications in Funifier. One way is to use DELETE method in (/v3/hook/:id); And the other way use POST method in (/v3/hook/unsubscribe) and inform the target_url in the body;</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Webhook",
            "optional": false,
            "field": "webhook",
            "description": "<p>Json Object with the following attributes: target_url;</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example:",
        "content": "POST https://service2.funifier.com/v3/hook/unsubscribe\nAuthorization: Basic NTYwMDgzMDg5\nContent-Type: application/json\n{\n  \"target_url\": \"https://yoursystem.com/unique_target_url\"\n}",
        "type": "json"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/WebhookRest.java",
    "groupTitle": "Webhook"
  },
  {
    "group": "Widget",
    "name": "Create_Widget",
    "type": "post",
    "url": "/v3/widget",
    "title": "Create Widget",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/widget"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Widget",
            "optional": false,
            "field": "widget",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/WidgetRest.java",
    "groupTitle": "Widget"
  },
  {
    "group": "Widget",
    "name": "Delete_Widget",
    "type": "delete",
    "url": "/v3/widget/:id",
    "title": "Delete Widget",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/widget/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/WidgetRest.java",
    "groupTitle": "Widget"
  },
  {
    "group": "Widget",
    "name": "Install_Widget",
    "type": "post",
    "url": "/v3/widget/install/:id",
    "title": "Install Widget",
    "description": "<p>Install the system widget with the specified id in the current gamification used with the credentials. After this you can edit your instance of that widget.</p>",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/widget/install"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/WidgetRest.java",
    "groupTitle": "Widget"
  },
  {
    "group": "Widget",
    "name": "Query_All_System_Widget",
    "type": "get",
    "url": "/v3/widget/system",
    "title": "Query All System Widget",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/widget/system"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/WidgetRest.java",
    "groupTitle": "Widget"
  },
  {
    "group": "Widget",
    "name": "Query_All_Widget",
    "type": "get",
    "url": "/v3/widget",
    "title": "Query All Widget",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/widget"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/WidgetRest.java",
    "groupTitle": "Widget"
  },
  {
    "group": "Widget",
    "name": "Query_Widget",
    "type": "get",
    "url": "/v3/widget/:id",
    "title": "Query Widget",
    "sampleRequest": [
      {
        "url": "https://service2.funifier.com/v3/widget/:id"
      }
    ],
    "permission": [
      {
        "name": "OAuth 2.0 (client_credentials)"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\n  {\n    \"title\": \"My Widget\",\n    \"image\": \"http://studio2.funifier.com/img/gt/icon/black/GT13.png\",\n    \"screenshot\": \"http://studio2.funifier.com/img/gt/widget/GT13.png\",\n    \"description\": \"Display my widget\",\n    \"tags\": [\"USA\"],\n    \"techniques\": [\"GT13\"],\n    \"script\": \"\",\n    \"html\": \"My Widget\",\n    \"css\": \"\",\n    \"resources\": [],\n    \"i18n\": {},\n    \"_id\": \"MY\"\n  }",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/WidgetRest.java",
    "groupTitle": "Widget"
  },
  {
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nCache-Control: no-store\nPragma: no-cache\n{\n  \"access_token\":\"eyJhbGciOiJIUzUxMiIsImNhbGciOiJHWklQIn0.H4sIAAAAAAAAAFXKMQqAMAwAwL9k7pX\",\n  \"token_type\":\"Bearer\",\n  \"expires_in\":36000\n}",
          "type": "json"
        }
      ]
    },
    "type": "",
    "url": "",
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AccountRest.java",
    "group": "_home_funifier_funifier_project_service_src_main_java_com_funifier_rest_v3_rest_AccountRest_java",
    "groupTitle": "_home_funifier_funifier_project_service_src_main_java_com_funifier_rest_v3_rest_AccountRest_java",
    "name": ""
  },
  {
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nCache-Control: no-store\nPragma: no-cache\n{\n  \"access_token\":\"eyJhbGciOiJIUzUxMiIsImNhbGciOiJHWklQIn0.H4sIAAAAAAAAAFXKMQqAMAwAwL9k7pX\",\n  \"token_type\":\"Bearer\",\n  \"expires_in\":36000\n}",
          "type": "json"
        }
      ]
    },
    "type": "",
    "url": "",
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AccountRest.java",
    "group": "_home_funifier_funifier_project_service_src_main_java_com_funifier_rest_v3_rest_AccountRest_java",
    "groupTitle": "_home_funifier_funifier_project_service_src_main_java_com_funifier_rest_v3_rest_AccountRest_java",
    "name": ""
  },
  {
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nCache-Control: no-store\nPragma: no-cache\n{\n  \"access_token\":\"eyJhbGciOiJIUzUxMiIsImNhbGciOiJHWklQIn0.H4sIAAAAAAAAAFXKMQqAMAwAwL9k7pX\",\n  \"token_type\":\"Bearer\",\n  \"expires_in\":36000\n}",
          "type": "json"
        }
      ]
    },
    "type": "",
    "url": "",
    "version": "0.0.0",
    "filename": "/home/funifier/funifier/project/service/src/main/java/com/funifier/rest/v3/rest/AccountRest.java",
    "group": "_home_funifier_funifier_project_service_src_main_java_com_funifier_rest_v3_rest_AccountRest_java",
    "groupTitle": "_home_funifier_funifier_project_service_src_main_java_com_funifier_rest_v3_rest_AccountRest_java",
    "name": ""
  }
] });
